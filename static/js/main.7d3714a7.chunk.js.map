{"version":3,"sources":["components/themeSwitch/themeChanger.js","components/header/header.js","components/chart/chart.js","components/card/card.js","components/select/select.js","constants/states.js","components/table/table.js","pages/home/home.js","constants/endpoints.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeChanger","useState","themeState","setThemeState","useEffect","localStorage","getItem","setItem","document","body","classList","add","remove","className","type","checked","onChange","Header","Chart","chart","ResponsiveContainer","LineChart","data","XAxis","dataKey","name","tick","axisLine","Line","dot","stroke","strokeColor","strokeWidth","Tooltip","formatter","value","Intl","NumberFormat","format","labelFormatter","Card","card","cardClass","label","toLocaleString","delta","DropDown","onStateChange","isLoading","placeholder","React","selectedOption","setSelectedOption","customStyles","option","provided","state","borderBottom","color","isSelected","singleValue","opacity","isDisabled","transition","selectedItem","options","styles","statesConfig","key","Table","theaders","tbody","map","x","i","getValuesFromObject","y","object","values","Object","keys","forEach","push","Home","cards","setCards","charts","setCharts","states","setStates","mainData","setMainData","tableData","setTableData","setTimeSeries","statesLoading","setStatesLoading","currentState","setCurrentState","fetchStates","axios","get","then","covidDataResponse","tempdashdata","tempCards","total","confirmed","deceased","recovered","tested","delta7","timeSeriesResponse","jsonData","chartData","dates","item","index","confirm","active","getActive","tempCharts","selectStatesFeed","v","length","satatesOrDistricts","rawData","meanigfulData","stateName","find","districts","district","districtIndex","districtName","extractDataForTable","e","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d3714a7.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport \"./themeChanger.scss\";\n\nexport default function ThemeChanger() {\n  const [themeState, setThemeState] = useState(false);\n\n  useEffect(() => {\n    const getTheme = localStorage.getItem(\"Theme\");\n    if (getTheme === \"dark\") {\n      setThemeState(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (themeState) {\n      localStorage.setItem(\"Theme\", \"dark\");\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      localStorage.setItem(\"Theme\", \"light\");\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [themeState]);\n\n  return (\n    <div className=\"cv-theme-container\">\n      <div className=\"cv-theme-icons\">\n      {!themeState && <FaMoon />}\n      {themeState && <FaSun/>}\n      </div>\n\n      <div>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            checked={themeState}\n            onChange={() => setThemeState(!themeState)}\n          />\n          <span className=\"slider round\"></span>\n        </label>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ThemeChanger from \"../themeSwitch/themeChanger\";\nimport \"./header.scss\";\nexport const Header = () => {\n  return (\n    <div className=\"cv-toolbar\">\n      <h2 className=\"cv-brand\">Covid-19 India</h2>\n      <span className=\"cv-switch\">\n        <ThemeChanger></ThemeChanger>\n      </span>\n    </div>\n  );\n};\n","import React from 'react'\nimport { LineChart, Line, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\n\nexport const Chart = ({chart}) => {\n    return (\n        <ResponsiveContainer>\n            <LineChart data={chart?.data}>\n              <XAxis dataKey={chart?.name} tick={false} axisLine={false}/>\n              <Line\n                dot={false}\n                type=\"basis\"\n                dataKey={chart?.name}\n                stroke={chart?.strokeColor}\n                strokeWidth={3}\n              />\n                <Tooltip formatter={(value) => new Intl.NumberFormat('en').format(value)} labelFormatter={(value) => ''}/>\n            </LineChart>\n          </ResponsiveContainer>\n    )\n}\n","import React from \"react\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { Chart } from \"../chart/chart\";\nimport \"./card.scss\";\n\nexport const Card = ({ card, chart }) => {\n  return (\n    <div className={\"cv-card \" + card.cardClass}>\n      <p className=\"cv-label\">{card?.label}</p>\n      <div className=\"cv-count-container\">\n        <p className=\"cv-count\">{card?.value?.toLocaleString(\"hi\")}</p>\n        {card?.delta !== 0 && (\n          <p className=\"cv-delta\">\n            <FaArrowUp className=\"cv-icon\" />\n            {card?.delta?.toLocaleString(\"hi\")}\n          </p>\n        )}\n      </div>\n\n      <div className=\"cv-chart-container\">\n        <Chart chart={chart}></Chart>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Select from \"react-select\";\nimport \"./select.scss\";\nexport const DropDown =({onStateChange,data,isLoading,placeholder})=> {\n  const [selectedOption, setSelectedOption] = React.useState('TT');\n  const handleChange = (selectedItem) => {\n    setSelectedOption(selectedItem);\n    onStateChange(selectedItem);\n  };\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted pink',\n      color: state.isSelected ? 'red' : 'blue',\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n  \n      return { ...provided, opacity, transition };\n    }\n  }\n\n  return (\n    <div className=\"select\">\n      <Select\n        value={selectedOption}\n        onChange={handleChange}\n        options={data}\n        placeholder={\"Select \" + placeholder}\n        isLoading={isLoading} styles={customStyles}\n      />\n    </div>\n  );\n}\n","export const statesConfig = [\n  {\n    key: \"TT\",\n    name: \"India\",\n  },\n  {\n    key: \"AN\",\n    name: \"Andaman and Nicobar Islands\",\n  },\n  {\n    key: \"AP\",\n    name: \"Andhra Pradesh\",\n  },\n  {\n    key: \"AR\",\n    name: \"Arunachal Pradesh\",\n  },\n  {\n    key: \"AS\",\n    name: \"Assam\",\n  },\n  {\n    key: \"BR\",\n    name: \"Bihar\",\n  },\n  {\n    key: \"CT\",\n    name: \"Chhattisgarh\",\n  },\n  {\n    key:\"CH\",\n    name:\"Chandigarh\"\n  },\n  {\n    key: \"DL\",\n    name: \"Delhi\",\n  },\n  {\n    key:\"DN\",\n    name:\"Dadra and Diu\"\n  },\n  {\n    key: \"GA\",\n    name: \"Goa\",\n  },\n  {\n    key: \"GJ\",\n    name: \"Gujarat\",\n  },\n  {\n    key: \"HR\",\n    name: \"Haryana\",\n  },\n  {\n    key: \"HP\",\n    name: \"Himachal Pradesh\",\n  },\n  {\n    key: \"JK\",\n    name: \"Jammu and Kashmir\",\n  },\n  {\n    key: \"JH\",\n    name: \"Jharkhand\",\n  },\n  {\n    key: \"KA\",\n    name: \"Karnataka\",\n  },\n  {\n    key: \"KL\",\n    name: \"Kerala\",\n  },\n  {\n    key:\"LA\",\n    name: \"Ladhak\"\n  },\n  {\n    key: \"LD\",\n    name: \"Lakshadweep\",\n  },\n  {\n    key: \"MP\",\n    name: \"Madhya Pradesh\",\n  },\n  {\n    key: \"MH\",\n    name: \"Maharashtra\",\n  },\n  {\n    key: \"MN\",\n    name: \"Manipur\",\n  },\n  {\n    key: \"ML\",\n    name: \"Meghalaya\",\n  },\n  {\n    key: \"MZ\",\n    name: \"Mizoram\",\n  },\n  {\n    key: \"NL\",\n    name: \"Nagaland\",\n  },\n  {\n    key: \"OR\",\n    name: \"Odisha\",\n  },\n  {\n    key: \"PY\",\n    name: \"Puducherry\",\n  },\n  {\n    key: \"PB\",\n    name: \"Punjab\",\n  },\n  {\n    key: \"RJ\",\n    name: \"Rajasthan\",\n  },\n  {\n    key: \"SK\",\n    name: \"Sikkim\",\n  },\n  {\n    key: \"TN\",\n    name: \"Tamil Nadu\",\n  },\n  {\n    key: \"TG\",\n    name: \"Telangana\",\n  },\n  {\n    key: \"TR\",\n    name: \"Tripura\",\n  },\n  {\n    key: \"UP\",\n    name: \"Uttar Pradesh\",\n  },\n  {\n    key: \"UT\",\n    name: \"Uttarakhand\"\n  },\n  {\n    key: \"WB\",\n    name: \"West Bengal\",\n  },\n];\n","import React from \"react\";\nimport './table.scss';\n\nexport const Table = ({ theaders, tbody, formatter }) => {\n  return ( \n    <div className=\"cv-table\">\n      <table>\n        <thead>\n          <tr>\n            {theaders.map((x,i) => {\n              return <th key={i}>{x}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {tbody?.map((x,i) => {\n            return (\n              <tr key={i}>\n                {getValuesFromObject(x).map((y) => {\n                  return <td>{y.toLocaleString(formatter)}</td>;\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst getValuesFromObject = (object) => {\n  let values = [];\n  Object.keys(object).forEach((x) => {\n    values.push(object[x]);\n  });\n\n  return values;\n};\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./home.scss\";\nimport { Card } from \"../../components/card/card\";\nimport { getCovidDataAPI, getTimeSeriesAPI } from \"../../constants/endpoints\";\nimport { DropDown } from \"../../components/select/select\";\nimport { statesConfig } from \"../../constants/states\";\nimport { Table } from \"../../components/table/table\";\n\nconst Home = () => {\n  const [cards, setCards] = useState(null);\n  const [charts, setCharts] = useState(null);\n  const [states, setStates] = useState({\n    states: [],\n  });\n\n  const [mainData, setMainData] = useState(null);\n  const [tableData, setTableData] = useState(null);\n  const [timeSeries, setTimeSeries] = useState(null);\n  const [statesLoading, setStatesLoading] = useState(true);\n\n  const [currentState, setCurrentState] = useState(\"TT\");\n\n  useEffect(() => {\n    fetchStates();\n  }, []);\n\n  useEffect(() => {\n    axios.get(getCovidDataAPI()).then((covidDataResponse) => {\n      const tempdashdata = covidDataResponse.data;\n      setMainData(tempdashdata);\n      let tempCards = [\n        {\n          label: \"Confirmed\",\n          value: tempdashdata?.[currentState]?.total?.confirmed,\n          delta: tempdashdata?.[currentState]?.delta?.confirmed,\n          cardClass: \"cv-alert\",\n        },\n        {\n          label: \"Active\",\n          value:\n            tempdashdata?.[currentState]?.total?.confirmed -\n            (tempdashdata?.[currentState]?.total?.deceased +\n              tempdashdata?.[currentState]?.total?.recovered),\n          delta: 0,\n          cardClass: \"cv-primary\",\n        },\n        {\n          label: \"Recovered\",\n          value: tempdashdata?.[currentState]?.total?.recovered,\n          delta: tempdashdata?.[currentState]?.delta?.recovered,\n          cardClass: \"cv-success\",\n        },\n        {\n          label: \"Deceased\",\n          value: tempdashdata?.[currentState]?.total?.deceased,\n          delta: tempdashdata?.[currentState]?.delta?.deceased,\n          cardClass: \"cv-warning\",\n        },\n        {\n          label: \"Tested\",\n          value: tempdashdata?.[currentState]?.total?.tested,\n          delta: tempdashdata?.[currentState]?.delta7?.tested,\n          cardClass: \"cv-info\",\n        },\n      ];\n\n      setCards(tempCards);\n    });\n    axios.get(getTimeSeriesAPI()).then((timeSeriesResponse) => {\n      const jsonData = timeSeriesResponse.data;\n      setTimeSeries(jsonData);\n      let chartData = [];\n      Object.keys(jsonData[currentState].dates).forEach((item, index) => {\n        if (index % 15 === 0) {\n          chartData.push({\n            name: item,\n            confirm: jsonData[currentState].dates[item].delta7?.confirmed\n              ? jsonData[currentState].dates[item].delta7?.confirmed\n              : 0,\n            active: getActive(\n              jsonData[currentState].dates[item].delta7?.confirmed,\n              jsonData[currentState].dates[item].delta7?.recovered,\n              jsonData[currentState].dates[item].delta7?.deceased\n            ),\n            recovered: jsonData[currentState].dates[item].delta7?.recovered\n              ? jsonData[currentState].dates[item].delta7?.recovered\n              : 0,\n            deceased: jsonData[currentState].dates[item].delta7?.deceased\n              ? jsonData[currentState].dates[item].delta7?.deceased\n              : 0,\n            tested: jsonData[currentState].dates[item].delta7?.tested\n              ? jsonData[currentState].dates[item].delta7?.tested\n              : 0,\n          });\n        }\n      });\n      let tempCharts = [\n        {\n          name: \"confirmed\",\n          data: chartData.map((x) => {\n            return { name: x.name, confirmed: x.confirm };\n          }),\n          strokeColor: \"#F7685B\",\n        },\n        {\n          name: \"active\",\n          data: chartData.map((x) => {\n            return { name: x.name, active: x.active };\n          }),\n          strokeColor: \"#109CF1\",\n        },\n        {\n          name: \"recovered\",\n          data: chartData.map((x) => {\n            return { name: x.name, recovered: x.recovered };\n          }),\n          strokeColor: \"#2ED47A\",\n        },\n        {\n          name: \"deceased\",\n          data: chartData.map((x) => {\n            return { name: x.name, deceased: x.deceased };\n          }),\n          strokeColor: \"#FFB946\",\n        },\n        {\n          name: \"tested\",\n          data: chartData.map((x) => {\n            return { name: x.name, tested: x.tested };\n          }),\n          strokeColor: \"#885AF8\",\n        },\n      ];\n\n      setCharts(tempCharts);\n    });\n  }, [currentState]);\n\n  const fetchStates = () => {\n    let selectStatesFeed = statesConfig.map((v) => {\n      return { value: v.key, label: v.name };\n    });\n    setStates({ states: selectStatesFeed });\n    setStatesLoading(false);\n  };\n\n  const extractDataForTable = (satatesOrDistricts, rawData = []) => {\n    let meanigfulData = [];\n    Object.keys(rawData).forEach((item, index) => {\n      if (currentState === \"TT\") {\n        meanigfulData.push({\n          stateName: satatesOrDistricts.find((x) => x.value === item)?.label,\n          confirm: rawData[item].total?.confirmed\n            ? rawData[item].total?.confirmed\n            : 0,\n          active: getActive(\n            rawData[item].total?.confirmed,\n            rawData[item].total?.recovered,\n            rawData[item].total?.deceased\n          ),\n          recovered: rawData[item].total?.recovered\n            ? rawData[item].total?.recovered\n            : 0,\n          deceased: rawData[item].total?.deceased\n            ? rawData[item].total?.deceased\n            : 0,\n          tested: rawData[item].total?.tested ? rawData[item].total?.tested : 0,\n        });\n      } else {\n        if (item === currentState)\n          Object.keys(rawData[item]?.districts).forEach(\n            (district, districtIndex) => {\n              meanigfulData.push({\n                districtName: district,\n                confirm: rawData[item].districts[district].total?.confirmed\n                  ? rawData[item].districts[district].total?.confirmed\n                  : 0,\n                active: getActive(\n                  rawData[item].districts[district].total?.confirmed,\n                  rawData[item].districts[district].total?.recovered,\n                  rawData[item].districts[district].total?.deceased\n                ),\n                recovered: rawData[item].districts[district].total?.recovered\n                  ? rawData[item].districts[district].total?.recovered\n                  : 0,\n                deceased: rawData[item].districts[district].total?.deceased\n                  ? rawData[item].districts[district].total?.deceased\n                  : 0,\n                tested: rawData[item].districts[district].total?.tested\n                  ? rawData[item].districts[district].total?.tested\n                  : 0,\n              });\n            }\n          );\n      }\n    });\n\n    return meanigfulData;\n  };\n\n  const getActive = (confirmed = 0, recovered = 0, deceased = 0) => {\n    return confirmed - (recovered + deceased);\n  };\n\n  useEffect(() => {\n    if (mainData && states.states.length > 0) {\n      setTableData(extractDataForTable(states.states, mainData));\n    }\n  }, [currentState, mainData]);\n\n  return (\n    <div className=\"cv-home\">\n      <DropDown\n        placeholder=\"State\"\n        data={states.states}\n        onStateChange={(e) => {\n          setCurrentState(e.value);\n        }}\n        isLoading={statesLoading}\n      ></DropDown>\n      <div className=\"cv-row\">\n        {cards\n          ? cards.map((x, i) => {\n              return (\n                <Card\n                  card={cards ? cards[i] : null}\n                  chart={charts ? charts[i] : null}\n                  key={i}\n                ></Card>\n              );\n            })\n          : null}\n      </div>\n      {mainData && (\n        <Table\n          theaders={[\n            currentState === \"TT\" ? \"State\" : \"District\",\n            \"Confirmed\",\n            \"Active\",\n            \"Recovered\",\n            \"Deseased\",\n            \"Tested\",\n          ]}\n          tbody={tableData}\n          formatter={\"hi\"}\n        ></Table>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","export const getTimeSeriesAPI = () => {\n  return \"https://data.covid19india.org/v4/min/timeseries.min.json\";\n};\n\nexport const getCovidDataAPI =()=> {\n    return 'https://data.covid19india.org/v4/min/data.min.json';\n}\n\nexport function GetStatesAPI() {\n  return \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\n}","import axios from 'axios';\nimport './App.scss';\nimport { Header } from './components/header/header';\nimport Home from './pages/home/home';\n\nfunction App() {\n  // axios.interceptors.request.use(function (config) {\n\n  //   // spinning start to show\n  //   // UPDATE: Add this code to show global loading indicator\n  //   // document.body.classList.add('loading-indicator');\n  \n  //   // const token = window.localStorage.token;\n  //   // if (token) {\n  //   //    config.headers.Authorization = `token ${token}`\n  //   // }\n  //   console.log('request start')\n\n  //   return config\n  // }, function (error) {\n  //   return Promise.reject(error);\n  // });\n  \n  // axios.interceptors.response.use(function (response) {\n  \n  //   // spinning hide\n  //   // UPDATE: Add this code to hide global loading indicator\n  //  // document.body.classList.remove('loading-indicator');\n  \n  //   console.log('request done')\n  //   return response;\n  // }, function (error) {\n  //   return Promise.reject(error);\n  // });\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}