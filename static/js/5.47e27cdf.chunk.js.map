{"version":3,"sources":["components/chart/pie/pieChart.js","components/select/select.js","components/table/table.js","components/chart/line/lineChart.js","components/stats-card/stats-card.js","components/chart/bar/BarChart.js","components/maps/map.js","pages/vaccination/vaccination.js","components/card/card.js"],"names":["CVPieChart","pieData","title","COLORS","className","height","width","data","innerRadius","outerRadius","fill","paddingAngle","dataKey","map","entry","index","length","iconType","fontSize","DropDown","onStateChange","isLoading","placeholder","selectedItemDefault","React","useState","selectedOption","setSelectedOption","customStyles","option","provided","state","borderBottom","color","isSelected","singleValue","opacity","isDisabled","transition","value","onChange","selectedItem","options","styles","Table","theaders","tbody","formatter","onRowClick","x","i","onClick","getValuesFromObject","y","toLocaleString","object","values","Object","keys","forEach","push","CVLineChart","chart","ResponsiveContainer","LineChart","Line","dot","type","name","stroke","strokeColor","strokeWidth","Tooltip","Intl","NumberFormat","format","labelFormatter","StatsCard","card","cardClass","label","delta","CVBarChart","barChartData","bars","BarChart","margin","top","right","left","bottom","XAxis","interval","angle","textAnchor","Legend","verticalAlign","item","Bar","stackId","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","pressed","Maps","tooltipContent","setTooltipContent","id","setData","useEffect","a","axios","get","raw_data","groupData","getBeneficiariesGroupBy","dataForMap","v","find","m","total","fetchData","colorScale","scaleQuantile","domain","d","range","onMouseEnter","geo","current","properties","Number","onMouseLeave","projectionConfig","projection","geography","geographies","s","style","rsmKey","getTableData","beneficiariesGroupBy","currentState","currentDistrict","vaccinationTableData","state_name","district_id","partial_vaccinated","today","totally_vaccinated","district_name","getBarChartsData","Dose1","Dose2","getPieChartData","vaccination","vaccinationByAge","pieChartsData","tot_dose_1","tot_dose_2","covishield","covaxin","sputnik","male","female","others","above_60","vac_18_45","vac_45_60","getCardsData","cardsData","today_dose_one","today_dose_two","today_female","today_male","today_others","getLineChartData","weeklyReport","weeklyVacAgeWiseReport","lineChartsData","startdate","dose1","dose2","above60","vac_60_above","age45_60","age18_45","getStatesFromRawData","state_id","Vaccination","setPublicReports","setVaccinePublicReports","cards","setCards","pieCharts","setPieCharts","lineCharts","setLineCharts","barChart","setBarCharts","vaccinationTable","setVaccinationTable","states","setStates","setCurrentState","districts","setDistricts","setCurrentDistrict","selectedDropdown1","setSelectedDropdown1","selectedDropdown2","setSelectedDropdown2","then","responseData","PublicReportsResponse","topBlock","error","console","log","response","vaccinePublicReportsJson","e","row","window","scrollTo","behavior","Card","props","children"],"mappings":"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","file":"static/js/5.47e27cdf.chunk.js","sourcesContent":["import React from \"react\";\nimport { PieChart, Pie, Cell, Legend, Tooltip } from \"recharts\";\nimport './pieChart.scss';\n\nexport const CVPieChart = ({ pieData, title }) => {\n  const COLORS = [\"#109CF1\", \"#2ED47A\", \"#885AF8\", \"#F7685B\"];\n  return (\n    <div className=\"cv-pie-container\">\n      <b>{title}</b>\n      <PieChart height={250} width={350}>\n        <Pie\n          data={pieData}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={0}\n          dataKey=\"value\"\n        >\n          {pieData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Legend iconType=\"circle\" fontSize={4} />\n        <Tooltip/>\n      </PieChart>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Select from \"react-select\";\nimport \"./select.scss\";\nexport const DropDown =({onStateChange,data,isLoading,placeholder, selectedItemDefault})=> {\n  const [selectedOption, setSelectedOption] = React.useState(selectedItemDefault);\n  const handleChange = (selectedItem) => {\n    setSelectedOption(selectedItem);\n    onStateChange(selectedItem);\n  };\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted pink',\n      color: state.isSelected ? 'red' : 'blue',\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n  \n      return { ...provided, opacity, transition };\n    }\n  }\n\n  return (\n    <div className=\"select\">\n      <Select\n        value={selectedOption}\n        onChange={handleChange}\n        options={data}\n        placeholder={\"Select \" + placeholder}\n        isLoading={isLoading} styles={customStyles}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"../card/card\";\nimport \"./table.scss\";\n\nexport const Table = ({ theaders, tbody, formatter, onRowClick }) => {\n  const handleClick =(item)=>{\n    onRowClick(item);\n  }\n  return (\n    <Card>\n      <div className=\"cv-table\">\n        <table>\n          <thead>\n            <tr>\n              {theaders.map((x, i) => {\n                return <th key={i}>{x}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {tbody?.map((x, i) => {\n              return (\n                <tr key={i} onClick={()=>handleClick(x)}>\n                  {getValuesFromObject(x).map((y) => {\n                    return <td>{y.toLocaleString(formatter)}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n};\n\nconst getValuesFromObject = (object) => {\n  let values = [];\n  Object.keys(object).forEach((x) => {\n    values.push(object[x]);\n  });\n\n  return values;\n};\n","import React from 'react'\nimport { LineChart, Line, ResponsiveContainer, Tooltip } from \"recharts\";\n\nexport const CVLineChart = ({chart}) => {\n    return (\n        <ResponsiveContainer>\n            <LineChart data={chart?.data}>\n              <Line\n                dot={false}\n                type=\"basis\"\n                dataKey={chart?.name}\n                stroke={chart?.strokeColor}\n                strokeWidth={3}\n              />\n                <Tooltip formatter={(value) => new Intl.NumberFormat('en').format(value)} labelFormatter={(value) => ''} />\n            </LineChart>\n          </ResponsiveContainer>\n    )\n}\n","import React from \"react\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { Card } from \"../card/card\";\nimport { CVLineChart } from \"../chart/line/lineChart\";\nimport \"./stats-card.scss\";\n\nexport const StatsCard = ({ card, chart }) => {\n  return (\n    <Card>\n      <div className={\"cv-stats-card \" + card.cardClass}>\n        <p className=\"cv-label\">{card?.label}</p>\n        <div className=\"cv-count-container\">\n          <p className=\"cv-count\">{card?.value?.toLocaleString(\"hi\")}</p>\n          {card?.delta > 0 && (\n            <p className=\"cv-delta\">\n              <FaArrowUp className=\"cv-icon\" />\n              {card?.delta?.toLocaleString(\"hi\")}\n            </p>\n          )}\n        </div>\n        {chart && (\n          <div className=\"cv-chart-container\">\n            <CVLineChart chart={chart}></CVLineChart>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport \"./barChart.scss\";\nexport const CVBarChart = ({ barChartData, bars }) => {\n  return (\n    <ResponsiveContainer>\n      <BarChart\n        data={barChartData}\n        margin={{\n          top: 0,\n          right: 50,\n          left: 50,\n          bottom: 100,\n        }}\n      >\n        <XAxis\n          dataKey=\"name\"\n          interval={0}\n          angle={-45}\n          textAnchor=\"end\"\n          fontSize=\"12\"\n        />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" iconType=\"circle\"/>\n        {bars.map((item, index) => {\n          return (\n            <Bar\n              dataKey={item.dataKey}\n              stackId=\"a\"\n              fill={item.fill}\n              key={\"bar-\" + index}\n            />\n          );\n        })}\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantile } from \"d3-scale\";\nimport ReactTooltip from \"react-tooltip\";\n\n// import LinearGradient from \"./linearGradient.js\";\n// import getData from \"../../common/service/api.service.js\";\n// import { Dashboard_API } from \"../../common/enums/API.enum.js\";\n\nimport './map.scss';\nimport axios from \"axios\";\n/**\n * Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\n * Looking topojson for other countries/world?\n * Visit: https://github.com/markmarkoh/datamaps\n */\nconst INDIA_TOPO_JSON = require(\"../../assets/json/india.topo.json\");\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937], // always in [East Latitude, North Longitude]\n};\n\n// Red Variants\nconst COLOR_RANGE = [\n  \"#707660\",\n  \"#6a705a\",\n  \"#646a55\",\n  \"#5e644f\",\n  \"#585e49\",\n  \"#525844\",\n  \"#4d533e\",\n];\n\nconst DEFAULT_COLOR = \"#EEE\";\n\nconst getRandomInt = () => {\n  return parseInt(Math.random() * 100);\n};\n\nconst geographyStyle = {\n  default: {\n    outline: \"none\",\n  },\n  hover: {\n    fill: \"#ccc\",\n    transition: \"all 250ms\",\n    outline: \"none\",\n  },\n  pressed: {\n    outline: \"none\",\n  },\n};\n\n// will generate random heatmap data on every call\nconst getStatesProps = () => {\n  return [\n    { id: \"AP\", state: \"Andhra Pradesh\", value: 0 },\n    { id: \"AR\", state: \"Arunachal Pradesh\", value: 0 },\n    { id: \"AS\", state: \"Assam\", value: 0 },\n    { id: \"BR\", state: \"Bihar\", value: 0 },\n    { id: \"CT\", state: \"Chhattisgarh\", value: 0 },\n    { id: \"GA\", state: \"Goa\", value: 21 },\n    { id: \"GJ\", state: \"Gujarat\", value: 22 },\n    { id: \"HR\", state: \"Haryana\", value: 0 },\n    { id: \"HP\", state: \"Himachal Pradesh\", value: 24 },\n    { id: \"JH\", state: \"Jharkhand\", value: 26 },\n    { id: \"KA\", state: \"Karnataka\", value: 27 },\n    { id: \"KL\", state: \"Kerala\", value: 0 },\n    { id: \"MP\", state: \"Madhya Pradesh\", value: 0 },\n    { id: \"MH\", state: \"Maharashtra\", value: 0 },\n    { id: \"MN\", state: \"Manipur\", value: 0 },\n    { id: \"ML\", state: \"Meghalaya\", value: 0 },\n    { id: \"MZ\", state: \"Mizoram\", value: 0 },\n    { id: \"NL\", state: \"Nagaland\", value: 0 },\n    { id: \"OD\", state: \"Odisha\", value: 0 },\n    { id: \"PB\", state: \"Punjab\", value: 0 },\n    { id: \"RJ\", state: \"Rajasthan\", value: 0 },\n    { id: \"SK\", state: \"Sikkim\", value: 0 },\n    { id: \"TN\", state: \"Tamil Nadu\", value: 0 },\n    { id: \"TS\", state: \"Telangana\", value: 0 },\n    { id: \"TR\", state: \"Tripura\", value: 0 },\n    { id: \"UK\", state: \"Uttarakhand\", value: 0 },\n    { id: \"UP\", state: \"Uttar Pradesh\", value: 0 },\n    { id: \"WB\", state: \"West Bengal\", value: 0 },\n    { id: \"WB\", state: \"West Bengal\", value: 0 },\n    { id: \"AN\", state: \"Andaman and Nicobar Islands\", value: 0 },\n    { id: \"CH\", state: \"Chandigarh\", value: 0 },\n    { id: \"DN\", state: \"Dadra and Nagar Haveli\", value: 0 },\n    { id: \"DD\", state: \"Daman and Diu\", value: 0 },\n    { id: \"DL\", state: \"Delhi\", value: 0 },\n    { id: \"JK\", state: \"Jammu and Kashmir\", value: 0 },\n    { id: \"LA\", state: \"Ladakh\", value: 0 },\n    { id: \"LD\", state: \"Lakshadweep\", value: 0 },\n    { id: \"PY\", state: \"Puducherry\", value: 0 },\n  ];\n};\n\nfunction Maps() {\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const [data, setData] = useState(getStatesProps());\n\n  useEffect(() => {\n    async function fetchData() {\n      const raw_data = await (await axios.get(\"https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports?state_id=\")).data;\n      let groupData = raw_data.getBeneficiariesGroupBy;\n      let dataForMap = getStatesProps().map((v) => {\n\n        return {\n          id: v.id,\n          state: v.state,\n          value: groupData.find((m) => m.title == v.state).total,\n        };\n      });\n      setData(dataForMap);\n    }\n    fetchData();\n  }, []);\n\n  const colorScale = scaleQuantile()\n    .domain(data.map((d) => d.value))\n    .range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\n    return () => {\n      setTooltipContent(`${geo.properties.name}: ${Number(current.value).toLocaleString(\"en-IN\")}`);\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent(\"\");\n  };\n\n\n  return (\n    <div className=\"full-width-height container\">\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\n      <ComposableMap\n        projectionConfig={PROJECTION_CONFIG}\n        projection=\"geoMercator\"\n        width={600}\n        height={220}\n        data-tip=\"\"\n      >\n        <Geographies geography={INDIA_TOPO_JSON}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              //console.log(geo.id);\n              const current = data.find((s) => s.id === geo.id);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={current ? colorScale(current.value) : DEFAULT_COLOR}\n                  style={geographyStyle}\n                  onMouseEnter={onMouseEnter(geo, current)}\n                  onMouseLeave={onMouseLeave}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n  );\n}\n\nexport default Maps;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"../../components/card/card\";\nimport { CVBarChart } from \"../../components/chart/bar/BarChart\";\nimport { CVPieChart } from \"../../components/chart/pie/pieChart\";\nimport Maps from \"../../components/maps/map\";\nimport { DropDown } from \"../../components/select/select\";\nimport { StatsCard } from \"../../components/stats-card/stats-card\";\nimport { Table } from \"../../components/table/table\";\nimport \"./vaccination.scss\";\nconst Vaccination = () => {\n  const [publicReports, setPublicReports] = useState(null);\n  const [vaccinePublicReports, setVaccinePublicReports] = useState(null);\n  const [cards, setCards] = useState(null);\n  const [pieCharts, setPieCharts] = useState(null);\n  const [lineCharts, setLineCharts] = useState(null);\n  const [barChart, setBarCharts] = useState(null);\n  const [vaccinationTable, setVaccinationTable] = useState(null);\n  const [states, setStates] = useState(null);\n  const [currentState, setCurrentState] = useState(\"\");\n  const [districts, setDistricts] = useState(null);\n  const [currentDistrict, setCurrentDistrict] = useState(\"\");\n\n  const [selectedDropdown1, setSelectedDropdown1] = useState(null);\n  const [selectedDropdown2, setSelectedDropdown2] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports?state_id=${currentState}&district_id=${currentDistrict}&date=`\n      )\n      .then(\n        (responseData) => {\n          const PublicReportsResponse = responseData.data;\n          //if (PublicReportsResponse) {\n          setPublicReports(PublicReportsResponse);\n          const vaccination = PublicReportsResponse?.topBlock?.vaccination;\n          const vaccinationByAge = PublicReportsResponse?.vaccinationByAge;\n          const beneficiariesGroupBy =\n            PublicReportsResponse?.getBeneficiariesGroupBy;\n\n          setPieCharts(getPieChartData(vaccination, vaccinationByAge));\n          setCards(getCardsData(vaccination, vaccinationByAge));\n          setBarCharts(getBarChartsData(beneficiariesGroupBy));\n          if (currentState === \"\") {\n            setStates(getStatesFromRawData(beneficiariesGroupBy, \"\"));\n            setVaccinationTable(getTableData(beneficiariesGroupBy, \"\", \"\"));\n\n            setDistricts(null);\n            setCurrentDistrict(\"\");\n          } else if (currentState !== \"\" && currentDistrict === \"\") {\n            setDistricts(\n              getStatesFromRawData(beneficiariesGroupBy, currentState)\n            );\n            setVaccinationTable(\n              getTableData(beneficiariesGroupBy, currentState, \"\")\n            );\n          }\n          // }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    axios\n      .get(\n        `https://api.cowin.gov.in/api/v1/reports/v2/getVacPublicReports?state_id=${currentState}&district_id=${currentDistrict}&date`\n      )\n      .then(\n        (response) => {\n          const vaccinePublicReportsJson = response.data;\n          //if (publicReports && vaccinePublicReportsJson) {\n          setVaccinePublicReports(vaccinePublicReportsJson);\n          const weeklyReport = response.data?.weeklyReport;\n          const weeklyVacAgeWiseReport = response.data?.weeklyVacAgeWiseReport;\n\n          setLineCharts(getLineChartData(weeklyReport, weeklyVacAgeWiseReport));\n          // }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, [currentState, currentDistrict, selectedDropdown1, selectedDropdown2]);\n\n  const handleTableRowClick = (row) => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n    if (row.state_name) {\n      setCurrentState(states.find((x) => x.label === row.state_name).value);\n      setSelectedDropdown1(states.find((x) => x.label === row.state_name));\n    } else if (row.district_name) {\n      setCurrentDistrict(\n        districts.find((x) => x.label === row.district_name).value\n      );\n      setSelectedDropdown2(\n        districts.find((x) => x.label === row.district_name)\n      );\n    }\n  };\n  return (\n    <div className=\"cv-main-container\">\n      {states && selectedDropdown1 === null && (\n        <DropDown\n          placeholder=\"State\"\n          data={states}\n          onStateChange={(e) => {\n            setCurrentState(e.value);\n            setCurrentDistrict(\"\");\n            setSelectedDropdown2(null);\n          }}\n          isLoading={false}\n          selectedItemDefault={selectedDropdown1}\n        ></DropDown>\n      )}\n      {states && selectedDropdown1 && (\n        <DropDown\n          placeholder=\"State\"\n          data={states}\n          onStateChange={(e) => {\n            setCurrentState(e.value);\n            setCurrentDistrict(\"\");\n          }}\n          isLoading={false}\n          selectedItemDefault={selectedDropdown1}\n        ></DropDown>\n      )}\n      {districts && selectedDropdown2 === null && (\n        <DropDown\n          placeholder=\"Districts\"\n          data={districts}\n          onStateChange={(e) => {\n            setCurrentDistrict(e.value);\n          }}\n          isLoading={false}\n          selectedItemDefault={selectedDropdown2}\n        ></DropDown>\n      )}\n      {districts && selectedDropdown2 && (\n        <DropDown\n          placeholder=\"Districts\"\n          data={districts}\n          onStateChange={(e) => {\n            setCurrentDistrict(e.value);\n          }}\n          isLoading={false}\n          selectedItemDefault={selectedDropdown2}\n        ></DropDown>\n      )}\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i < 3) {\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard\n                    card={item}\n                    key={\"card-\" + i}\n                    chart={lineCharts && i < 3 ? lineCharts[i] : null}\n                  ></StatsCard>\n                </div>\n              );\n            }\n            return null;\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i >= 3 && i < 6) {\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard card={item} key={\"card-\" + i}></StatsCard>\n                </div>\n              );\n            }\n            return null;\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i >= 6 && i < 9) {\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard card={item} key={\"card-\" + i}></StatsCard>\n                </div>\n              );\n            }\n            return null;\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i >= 9 && i < 12) {\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard\n                    card={item}\n                    key={\"card-\" + i}\n                    chart={lineCharts && i > 2 ? lineCharts[i - 6] : null}\n                  ></StatsCard>\n                </div>\n              );\n            }\n            return null;\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {pieCharts &&\n          pieCharts.map((item, index) => {\n            return (\n              <div\n                className=\"cv-pie-chart-container-vaccine\"\n                key={\"pie-container-\" + index}\n              >\n                <Card>\n                  {\" \"}\n                  <CVPieChart\n                    pieData={item.data}\n                    title={item.title}\n                    className=\"pie-card\"\n                    key={\"pie-\" + index}\n                  ></CVPieChart>\n                </Card>\n              </div>\n            );\n          })}\n      </div>\n      {barChart && currentDistrict === \"\" && (\n        <div className=\"bar-chart\">\n          <Card>\n            <CVBarChart\n              barChartData={barChart.barChartData}\n              bars={barChart.bars}\n            />\n          </Card>\n        </div>\n      )}\n\n      {vaccinationTable && currentDistrict === \"\" && (\n        <div className=\"cv-stats-table\">\n          <Table\n            theaders={[\n              currentState === \"\" ? \"State\" : \"District\",\n              \"Total\",\n              \"Partial vaccinated\",\n              \"Today\",\n              \"Totally vaccinated\",\n            ]}\n            tbody={vaccinationTable}\n            formatter={\"hi\"}\n            key={\"table-1\"}\n            onRowClick={(e) => handleTableRowClick(e)}\n          ></Table>\n        </div>\n      )}\n      <div className=\"cv-map-contaier\">\n        <Card>\n          <Maps></Maps>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nconst getTableData = (\n  beneficiariesGroupBy,\n  currentState = \"\",\n  currentDistrict = \"\"\n) => {\n  let vaccinationTableData = [];\n  beneficiariesGroupBy.forEach((item, i) => {\n    if (currentState === \"\") {\n      vaccinationTableData.push({\n        state_name: item.district_id ? item.title : item.state_name,\n        total: item.total,\n        partial_vaccinated: item.partial_vaccinated,\n        today: item.today,\n        totally_vaccinated: item.totally_vaccinated,\n      });\n    } else if (currentDistrict === \"\") {\n      vaccinationTableData.push({\n        district_name: item.district_id ? item.title : item.state_name,\n        total: item.total,\n        partial_vaccinated: item.partial_vaccinated,\n        today: item.today,\n        totally_vaccinated: item.totally_vaccinated,\n      });\n    }\n  });\n\n  return vaccinationTableData;\n};\nconst getBarChartsData = (beneficiariesGroupBy) => {\n  let barChartData = [];\n  let barConfig = [\n    {\n      dataKey: \"Dose1\",\n      fill: \"#109CF1\",\n    },\n    {\n      dataKey: \"Dose2\",\n      fill: \"#2ED47A\",\n    },\n  ];\n  beneficiariesGroupBy.forEach((item, i) => {\n    barChartData.push({\n      name: item.district_id ? item.title : item.state_name,\n      Dose1: item.partial_vaccinated,\n      Dose2: item.totally_vaccinated,\n    });\n  });\n\n  return { barChartData: barChartData, bars: barConfig };\n};\n\nconst getPieChartData = (vaccination, vaccinationByAge) => {\n  let pieChartsData = [];\n  pieChartsData.push(\n    ...[\n      {\n        title: \"Dose 1 vs Dose 2\",\n        data: [\n          { name: \"Dose1\", value: vaccination?.tot_dose_1 },\n          { name: \"Dose2\", value: vaccination?.tot_dose_2 },\n        ],\n      },\n      {\n        title: \"Vaccine brands\",\n        data: [\n          { name: \"Covishield\", value: vaccination?.covishield },\n          { name: \"Covaxin\", value: vaccination?.covaxin },\n          { name: \"Sputnik\", value: vaccination?.sputnik },\n        ],\n      },\n      {\n        title: \"Gender\",\n        data: [\n          { name: \"Male\", value: vaccination?.male },\n          { name: \"Female\", value: vaccination?.female },\n          { name: \"Others\", value: vaccination?.others },\n        ],\n      },\n      {\n        title: \"Vaccination by Age\",\n        data: [\n          { name: \"Above60\", value: vaccinationByAge?.above_60 },\n          { name: \"18-45\", value: vaccinationByAge?.vac_18_45 },\n          { name: \"45-60\", value: vaccinationByAge?.vac_45_60 },\n        ],\n      },\n    ]\n  );\n\n  return pieChartsData;\n};\n\nconst getCardsData = (vaccination, vaccinationByAge) => {\n  let cardsData = [];\n  cardsData.push(\n    ...[\n      {\n        label: \"Vaccines\",\n        value: vaccination?.total,\n        delta: vaccination?.today,\n        cardClass: \"cv-info\",\n      },\n      {\n        label: \"Partially vaccinated\",\n        value: vaccination?.tot_dose_1,\n        delta: vaccination?.today_dose_one,\n        cardClass: \"cv-warning\",\n      },\n      {\n        label: \"Fully vaccinated\",\n        value: vaccination?.tot_dose_2,\n        delta: vaccination?.today_dose_two,\n        cardClass: \"cv-success\",\n      },\n      {\n        label: \"Covishield\",\n        value: vaccination?.covishield,\n        delta: 0,\n        cardClass: \"cv-alert\",\n      },\n      {\n        label: \"Covaxin\",\n        value: vaccination?.covaxin,\n        delta: 0,\n        cardClass: \"cv-info\",\n      },\n      {\n        label: \"Sputnik\",\n        value: vaccination?.sputnik,\n        delta: 0,\n        cardClass: \"cv-primary\",\n      },\n      {\n        label: \"Male\",\n        value: vaccination?.male,\n        delta: vaccination?.today_female ? vaccination?.today_male : 0,\n        cardClass: \"cv-success\",\n      },\n      {\n        label: \"Female\",\n        value: vaccination?.female,\n        delta: vaccination?.today_female ? vaccination?.today_female : 0,\n        cardClass: \"cv-primary\",\n      },\n      {\n        label: \"Others\",\n        value: vaccination?.others,\n        delta: vaccination?.today_female ? vaccination?.today_others : 0,\n        cardClass: \"cv-info\",\n      },\n      {\n        label: \"Age above 60\",\n        value: vaccinationByAge?.above_60,\n        delta: 0,\n        cardClass: \"cv-success\",\n      },\n      {\n        label: \"Age 45-60\",\n        value: vaccinationByAge?.vac_45_60,\n        delta: 0,\n        cardClass: \"cv-primary\",\n      },\n      {\n        label: \"Age 18-45\",\n        value: vaccinationByAge?.vac_18_45,\n        delta: 0,\n        cardClass: \"cv-info\",\n      },\n    ]\n  );\n\n  return cardsData;\n};\n\nconst getLineChartData = (weeklyReport, weeklyVacAgeWiseReport) => {\n  let lineChartsData = [];\n  lineChartsData.push(\n    ...[\n      {\n        name: \"total\",\n        data: weeklyReport?.map((x) => {\n          return { name: x.startdate, total: x.total };\n        }),\n        strokeColor: \"#885AF8\",\n      },\n      {\n        name: \"dose1\",\n        data: weeklyReport.map((x) => {\n          return { name: x.startdate, dose1: x.dose1 };\n        }),\n        strokeColor: \"#FFB946\",\n      },\n      {\n        name: \"dose2\",\n        data: weeklyReport.map((x) => {\n          return { name: x.startdate, dose2: x.dose2 };\n        }),\n        strokeColor: \"#2ED47A\",\n      },\n\n      {\n        name: \"above60\",\n        data: weeklyVacAgeWiseReport.map((x) => {\n          return { name: x.startdate, above60: x.vac_60_above };\n        }),\n        strokeColor: \"#2ED47A\",\n      },\n      {\n        name: \"age45_60\",\n        data: weeklyVacAgeWiseReport.map((x) => {\n          return { name: x.startdate, age45_60: x.vac_45_60 };\n        }),\n        strokeColor: \"#109CF1\",\n      },\n      {\n        name: \"age18_45\",\n        data: weeklyVacAgeWiseReport.map((x) => {\n          return { name: x.startdate, age18_45: x.vac_18_45 };\n        }),\n        strokeColor: \"#885AF8\",\n      },\n    ]\n  );\n  return lineChartsData;\n};\n\nconst getStatesFromRawData = (beneficiariesGroupBy, currentState) => {\n  if (currentState === \"\") {\n    return [{ title: \"India\", state_id: \"\" }, ...beneficiariesGroupBy].map(\n      (item) => {\n        return { value: item.state_id, label: item.title };\n      }\n    );\n  } else {\n    return [\n      { title: beneficiariesGroupBy[0].state_name, district_id: \"\" },\n      ...beneficiariesGroupBy,\n    ].map((item) => {\n      return { value: item.district_id, label: item.title };\n    });\n  }\n};\n\nexport default Vaccination;\n","import React from \"react\";\nimport \"./card.scss\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"cv-card \">\n      {props.children}\n    </div>\n  );\n};\n"],"sourceRoot":""}