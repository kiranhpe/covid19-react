{"version":3,"sources":["components/header/header.js","pages/home/home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","getActive","confirmed","recovered","deceased","Home","useState","dashboard","setDashboard","dashboardChar","setDashboardChar","useEffect","axios","get","then","res","data","jsonData","chartData","Object","keys","TT","dates","forEach","item","index","push","name","confirm","delta7","active","meta","date","total","toLocaleString","delta","ResponsiveContainer","LineChart","Line","dot","type","dataKey","stroke","strokeWidth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3398818e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.scss'\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"cv-toolbar\">\r\n            <h2 className=\"cv-brand\">Covid-19 India</h2>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { LineChart, Line, ResponsiveContainer } from \"recharts\";\r\n\r\nimport { FaArrowUp, FaRegClock } from \"react-icons/fa\";\r\nimport \"./home.scss\";\r\nconst Home = () => {\r\n  const [dashboard, setDashboard] = useState(null);\r\n  const [dashboardChar, setDashboardChar] = useState(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://data.covid19india.org/v4/min/data.min.json\")\r\n      .then((res) => {\r\n        setDashboard(res.data);\r\n      });\r\n\r\n    axios\r\n      .get(\"https://data.covid19india.org/v4/min/timeseries.min.json\")\r\n      .then((res) => {\r\n        const jsonData = res.data;\r\n        let chartData = [];\r\n        Object.keys(jsonData.TT.dates).forEach((item, index) => {\r\n          if (index % 15 === 0) {\r\n            chartData.push({\r\n              name: item,\r\n              confirm: jsonData.TT.dates[item].delta7?.confirmed\r\n                ? jsonData.TT.dates[item].delta7?.confirmed\r\n                : 0,\r\n              active: getActive(\r\n                jsonData.TT.dates[item].delta7?.confirmed,\r\n                jsonData.TT.dates[item].delta7?.recovered,\r\n                jsonData.TT.dates[item].delta7?.deceased\r\n              ),\r\n              recovered: jsonData.TT.dates[item].delta7?.recovered\r\n                ? jsonData.TT.dates[item].delta7?.recovered\r\n                : 0,\r\n              deceased: jsonData.TT.dates[item].delta7?.deceased\r\n                ? jsonData.TT.dates[item].delta7?.deceased\r\n                : 0,\r\n            });\r\n          }\r\n        });\r\n        setDashboardChar(chartData);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cv-home\">\r\n      <div className=\"cv-row\">\r\n        <div className=\"cv-card cv-alert\">\r\n          <div className=\"cv-last-updated\">\r\n            <FaRegClock className=\"cv-icon\" />\r\n            {dashboard?.TT.meta.date}\r\n          </div>\r\n          <span className=\"cv-label\">Confirmed</span>\r\n          <span className=\"cv-count\">\r\n            {dashboard?.TT.total.confirmed.toLocaleString()}\r\n            {dashboard?.TT.delta.confirmed !== 0 && (\r\n              <span className=\"cv-delta\">\r\n                <FaArrowUp className=\"cv-icon\" />\r\n                {dashboard?.TT.delta.confirmed.toLocaleString()}\r\n              </span>\r\n            )}\r\n          </span>\r\n          <div className=\"cv-chart-container\">\r\n            <ResponsiveContainer>\r\n              <LineChart data={dashboardChar}>\r\n                <Line\r\n                  dot={false}\r\n                  type=\"natural\"\r\n                  dataKey=\"confirm\"\r\n                  stroke=\"#F7685B\"\r\n                  strokeWidth={3}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"cv-card cv-primary\">\r\n          <div className=\"cv-last-updated\">\r\n            <FaRegClock className=\"cv-icon\" />\r\n            {dashboard?.TT.meta.date}\r\n          </div>\r\n          <span className=\"cv-label\">Active</span>\r\n          <span className=\"cv-count\">\r\n            {(\r\n              dashboard?.TT.total.confirmed -\r\n              (dashboard?.TT.total.deceased + dashboard?.TT.total.recovered)\r\n            ).toLocaleString()}\r\n          </span>\r\n          <div className=\"cv-chart-container\">\r\n            <ResponsiveContainer>\r\n              <LineChart data={dashboardChar}>\r\n                <Line\r\n                  dot={false}\r\n                  type=\"natural\"\r\n                  dataKey=\"active\"\r\n                  stroke=\"#109CF1\"\r\n                  strokeWidth={3}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n        <div className=\"cv-card cv-success\">\r\n          <div className=\"cv-last-updated\">\r\n            <FaRegClock className=\"cv-icon\" />\r\n            {dashboard?.TT.meta.date}\r\n          </div>\r\n          <span className=\"cv-label\">Recovered</span>\r\n          <span className=\"cv-count\">\r\n            {dashboard?.TT.total.recovered.toLocaleString()}{\" \"}\r\n            {dashboard?.TT.delta.recovered !== 0 && (\r\n              <span className=\"cv-delta\">\r\n                <FaArrowUp className=\"cv-icon\" />\r\n                {dashboard?.TT.delta.recovered.toLocaleString()}\r\n              </span>\r\n            )}\r\n          </span>\r\n          <div className=\"cv-chart-container\">\r\n            <ResponsiveContainer>\r\n              <LineChart data={dashboardChar}>\r\n                <Line\r\n                  dot={false}\r\n                  type=\"natural\"\r\n                  dataKey=\"recovered\"\r\n                  stroke=\"#2ED47A\"\r\n                  strokeWidth={3}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n        <div className=\"cv-card cv-warning\">\r\n          <div className=\"cv-last-updated\">\r\n            <FaRegClock className=\"cv-icon\" />\r\n            {dashboard?.TT.meta.date}\r\n          </div>\r\n          <span className=\"cv-label\">Deceased</span>\r\n          <span className=\"cv-count\">\r\n            {dashboard?.TT.total.deceased.toLocaleString()}\r\n            {dashboard?.TT.delta.deceased && (\r\n              <span className=\"cv-delta\">\r\n                <FaArrowUp className=\"cv-icon\" />\r\n                {dashboard?.TT.delta.deceased.toLocaleString()}\r\n              </span>\r\n            )}\r\n          </span>\r\n          <div className=\"cv-chart-container\">\r\n            <ResponsiveContainer>\r\n              <LineChart data={dashboardChar}>\r\n                <Line\r\n                  dot={false}\r\n                  type=\"natural\"\r\n                  dataKey=\"deceased\"\r\n                  stroke=\"#FFB946\"\r\n                  strokeWidth={3}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getActive = (confirmed = 0, recovered = 0, deceased = 0) => {\r\n  return confirmed - (recovered + deceased);\r\n};\r\n\r\nexport default Home;\r\n","import './App.scss';\nimport { Header } from './components/header/header';\nimport Home from './pages/home/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}