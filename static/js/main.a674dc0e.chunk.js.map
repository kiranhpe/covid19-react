{"version":3,"sources":["components/themeSwitch/themeChanger.js","components/header/header.js","components/select/select.js","constants/states.js","components/card/card.js","components/table/table.js","components/chart/line/lineChart.js","components/stats-card/stats-card.js","components/chart/pie/pieChart.js","pages/home/home.js","constants/endpoints.js","pages/vaccination/vaccination.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeChanger","useState","themeState","setThemeState","useEffect","localStorage","getItem","setItem","document","body","classList","add","remove","className","type","checked","onChange","Header","to","activeClassName","exact","DropDown","onStateChange","data","isLoading","placeholder","React","selectedOption","setSelectedOption","customStyles","option","provided","state","borderBottom","color","isSelected","singleValue","opacity","isDisabled","transition","value","selectedItem","options","styles","statesConfig","key","name","Card","props","children","Table","theaders","tbody","formatter","map","x","i","getValuesFromObject","y","toLocaleString","object","values","Object","keys","forEach","push","CVLineChart","chart","ResponsiveContainer","LineChart","Line","dot","dataKey","stroke","strokeColor","strokeWidth","Tooltip","Intl","NumberFormat","format","labelFormatter","StatsCard","card","cardClass","label","delta","CVPieChart","pieData","title","COLORS","PieChart","height","width","Pie","innerRadius","outerRadius","fill","paddingAngle","entry","index","Cell","length","Legend","iconType","fontSize","Home","cards","setCards","charts","setCharts","pieCharts","setPieCharts","states","setStates","mainData","setMainData","tableData","setTableData","setTimeSeries","statesLoading","setStatesLoading","currentState","setCurrentState","fetchStates","interval","setInterval","axios","get","then","covidDataResponse","tempdashdata","tempCards","total","confirmed","deceased","recovered","tested","delta7","vaccinated1","vaccinated2","pieChartsData","other","timeSeriesResponse","jsonData","chartData","dates","item","confirm","active","getActive","dose_1","dose_2","vaccine","tempCharts","clearInterval","selectStatesFeed","v","satatesOrDistricts","rawData","meanigfulData","stateName","find","districts","district","districtIndex","districtName","extractDataForTable","e","Vaccination","setPublicReports","vaccinationTable","setVaccinationTable","responseData","response","vaccination","topBlock","vaccinationByAge","beneficiariesGroupBy","getBeneficiariesGroupBy","cardsData","today","tot_dose_1","today_dose_one","tot_dose_2","today_dose_two","covishield","covaxin","sputnik","male","female","others","above_60","vac_18_45","vac_45_60","vaccinationTableData","state_name","partial_vaccinated","totally_vaccinated","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"odAIe,SAASA,IACtB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OAjBAC,qBAAU,WAES,SADAC,aAAaC,QAAQ,UAEpCH,GAAc,KAEf,IAEHC,qBAAU,WACJF,GACFG,aAAaE,QAAQ,QAAS,QAC9BC,SAASC,KAAKC,UAAUC,IAAI,eAE5BN,aAAaE,QAAQ,QAAS,SAC9BC,SAASC,KAAKC,UAAUE,OAAO,gBAEhC,CAACV,IAGF,sBAAKW,UAAU,qBAAf,UACE,sBAAKA,UAAU,iBAAf,WACEX,GAAc,cAAC,IAAD,IACfA,GAAc,cAAC,IAAD,OAGf,8BACE,wBAAOW,UAAU,SAAjB,UACE,uBACEC,KAAK,WACLC,QAASb,EACTc,SAAU,kBAAMb,GAAeD,MAEjC,sBAAMW,UAAU,yB,WClCbI,EAAS,WACpB,OACE,sBAAKJ,UAAU,aAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMK,GAAG,IAAIC,gBAAgB,SAA7B,8BAIF,sBAAKN,UAAU,aAAf,UACE,qBAAIA,UAAU,kBAAd,UACE,6BACE,cAAC,IAAD,CAASK,GAAG,IAAIC,gBAAgB,SAASC,OAAK,EAA9C,SACE,4CAGJ,6BACE,cAAC,IAAD,CAASF,GAAG,eAAeC,gBAAgB,SAA3C,SACE,sDAIN,sBAAMN,UAAU,YAAhB,SACE,cAACb,EAAD,a,6CCvBGqB,G,OAAU,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,cAAcC,EAA+B,EAA/BA,KAAKC,EAA0B,EAA1BA,UAAUC,EAAgB,EAAhBA,YACpD,EAA4CC,IAAMzB,SAAS,MAA3D,mBAAO0B,EAAP,KAAuBC,EAAvB,KAKMC,EAAe,CACnBC,OAAQ,SAACC,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,aAAc,kBACdC,MAAOF,EAAMG,WAAa,MAAQ,UAEpCC,YAAa,SAACL,EAAUC,GACtB,IAAMK,EAAUL,EAAMM,WAAa,GAAM,EAGzC,OAAO,2BAAKP,GAAZ,IAAsBM,UAASE,WAFZ,oBAMvB,OACE,qBAAK1B,UAAU,SAAf,SACE,cAAC,IAAD,CACE2B,MAAOb,EACPX,SAtBe,SAACyB,GACpBb,EAAkBa,GAClBnB,EAAcmB,IAqBVC,QAASnB,EACTE,YAAa,UAAYA,EACzBD,UAAWA,EAAWmB,OAAQd,QC9BzBe,EAAe,CAC1B,CACEC,IAAK,KACLC,KAAM,SAER,CACED,IAAK,KACLC,KAAM,+BAER,CACED,IAAK,KACLC,KAAM,kBAER,CACED,IAAK,KACLC,KAAM,qBAER,CACED,IAAK,KACLC,KAAM,SAER,CACED,IAAK,KACLC,KAAM,SAER,CACED,IAAK,KACLC,KAAM,gBAER,CACED,IAAI,KACJC,KAAK,cAEP,CACED,IAAK,KACLC,KAAM,SAER,CACED,IAAI,KACJC,KAAK,iBAEP,CACED,IAAK,KACLC,KAAM,OAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,oBAER,CACED,IAAK,KACLC,KAAM,qBAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,UAER,CACED,IAAI,KACJC,KAAM,UAER,CACED,IAAK,KACLC,KAAM,eAER,CACED,IAAK,KACLC,KAAM,kBAER,CACED,IAAK,KACLC,KAAM,eAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,YAER,CACED,IAAK,KACLC,KAAM,UAER,CACED,IAAK,KACLC,KAAM,cAER,CACED,IAAK,KACLC,KAAM,UAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,UAER,CACED,IAAK,KACLC,KAAM,cAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,iBAER,CACED,IAAK,KACLC,KAAM,eAER,CACED,IAAK,KACLC,KAAM,gBChJGC,G,OAAO,SAACC,GACnB,OACE,qBAAKnC,UAAU,WAAf,SACGmC,EAAMC,aCFAC,G,OAAQ,SAAC,GAAoC,IAAlC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","file":"static/js/main.a674dc0e.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport \"./themeChanger.scss\";\n\nexport default function ThemeChanger() {\n  const [themeState, setThemeState] = useState(false);\n\n  useEffect(() => {\n    const getTheme = localStorage.getItem(\"Theme\");\n    if (getTheme === \"dark\") {\n      setThemeState(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (themeState) {\n      localStorage.setItem(\"Theme\", \"dark\");\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      localStorage.setItem(\"Theme\", \"light\");\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [themeState]);\n\n  return (\n    <div className=\"cv-theme-container\">\n      <div className=\"cv-theme-icons\">\n      {!themeState && <FaMoon />}\n      {themeState && <FaSun/>}\n      </div>\n\n      <div>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            checked={themeState}\n            onChange={() => setThemeState(!themeState)}\n          />\n          <span className=\"slider round\"></span>\n        </label>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport ThemeChanger from \"../themeSwitch/themeChanger\";\nimport \"./header.scss\";\nexport const Header = () => {\n  return (\n    <div className=\"cv-toolbar\">\n      <h2 className=\"cv-brand\">\n        <Link to=\"/\" activeClassName=\"active\">\n          Covid-19 India\n        </Link>\n      </h2>\n      <div className=\"right-side\">\n        <ul className=\"links-container\">\n          <li>\n            <NavLink to=\"/\" activeClassName=\"active\" exact>\n              <span>Home</span>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/vaccination\" activeClassName=\"active\">\n              <span>Vaccination</span>\n            </NavLink>\n          </li>\n        </ul>\n        <span className=\"cv-switch\">\n          <ThemeChanger></ThemeChanger>\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Select from \"react-select\";\nimport \"./select.scss\";\nexport const DropDown =({onStateChange,data,isLoading,placeholder})=> {\n  const [selectedOption, setSelectedOption] = React.useState('TT');\n  const handleChange = (selectedItem) => {\n    setSelectedOption(selectedItem);\n    onStateChange(selectedItem);\n  };\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted pink',\n      color: state.isSelected ? 'red' : 'blue',\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n  \n      return { ...provided, opacity, transition };\n    }\n  }\n\n  return (\n    <div className=\"select\">\n      <Select\n        value={selectedOption}\n        onChange={handleChange}\n        options={data}\n        placeholder={\"Select \" + placeholder}\n        isLoading={isLoading} styles={customStyles}\n      />\n    </div>\n  );\n}\n","export const statesConfig = [\n  {\n    key: \"TT\",\n    name: \"India\",\n  },\n  {\n    key: \"AN\",\n    name: \"Andaman and Nicobar Islands\",\n  },\n  {\n    key: \"AP\",\n    name: \"Andhra Pradesh\",\n  },\n  {\n    key: \"AR\",\n    name: \"Arunachal Pradesh\",\n  },\n  {\n    key: \"AS\",\n    name: \"Assam\",\n  },\n  {\n    key: \"BR\",\n    name: \"Bihar\",\n  },\n  {\n    key: \"CT\",\n    name: \"Chhattisgarh\",\n  },\n  {\n    key:\"CH\",\n    name:\"Chandigarh\"\n  },\n  {\n    key: \"DL\",\n    name: \"Delhi\",\n  },\n  {\n    key:\"DN\",\n    name:\"Dadra and Diu\"\n  },\n  {\n    key: \"GA\",\n    name: \"Goa\",\n  },\n  {\n    key: \"GJ\",\n    name: \"Gujarat\",\n  },\n  {\n    key: \"HR\",\n    name: \"Haryana\",\n  },\n  {\n    key: \"HP\",\n    name: \"Himachal Pradesh\",\n  },\n  {\n    key: \"JK\",\n    name: \"Jammu and Kashmir\",\n  },\n  {\n    key: \"JH\",\n    name: \"Jharkhand\",\n  },\n  {\n    key: \"KA\",\n    name: \"Karnataka\",\n  },\n  {\n    key: \"KL\",\n    name: \"Kerala\",\n  },\n  {\n    key:\"LA\",\n    name: \"Ladhak\"\n  },\n  {\n    key: \"LD\",\n    name: \"Lakshadweep\",\n  },\n  {\n    key: \"MP\",\n    name: \"Madhya Pradesh\",\n  },\n  {\n    key: \"MH\",\n    name: \"Maharashtra\",\n  },\n  {\n    key: \"MN\",\n    name: \"Manipur\",\n  },\n  {\n    key: \"ML\",\n    name: \"Meghalaya\",\n  },\n  {\n    key: \"MZ\",\n    name: \"Mizoram\",\n  },\n  {\n    key: \"NL\",\n    name: \"Nagaland\",\n  },\n  {\n    key: \"OR\",\n    name: \"Odisha\",\n  },\n  {\n    key: \"PY\",\n    name: \"Puducherry\",\n  },\n  {\n    key: \"PB\",\n    name: \"Punjab\",\n  },\n  {\n    key: \"RJ\",\n    name: \"Rajasthan\",\n  },\n  {\n    key: \"SK\",\n    name: \"Sikkim\",\n  },\n  {\n    key: \"TN\",\n    name: \"Tamil Nadu\",\n  },\n  {\n    key: \"TG\",\n    name: \"Telangana\",\n  },\n  {\n    key: \"TR\",\n    name: \"Tripura\",\n  },\n  {\n    key: \"UP\",\n    name: \"Uttar Pradesh\",\n  },\n  {\n    key: \"UT\",\n    name: \"Uttarakhand\"\n  },\n  {\n    key: \"WB\",\n    name: \"West Bengal\",\n  },\n];\n","import React from \"react\";\nimport \"./card.scss\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"cv-card \">\n      {props.children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card } from \"../card/card\";\nimport \"./table.scss\";\n\nexport const Table = ({ theaders, tbody, formatter }) => {\n  return (\n    <Card>\n      <div className=\"cv-table\">\n        <table>\n          <thead>\n            <tr>\n              {theaders.map((x, i) => {\n                return <th key={i}>{x}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {tbody?.map((x, i) => {\n              return (\n                <tr key={i}>\n                  {getValuesFromObject(x).map((y) => {\n                    return <td>{y.toLocaleString(formatter)}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n};\n\nconst getValuesFromObject = (object) => {\n  let values = [];\n  Object.keys(object).forEach((x) => {\n    values.push(object[x]);\n  });\n\n  return values;\n};\n","import React from 'react'\nimport { LineChart, Line, ResponsiveContainer, Tooltip } from \"recharts\";\n\nexport const CVLineChart = ({chart}) => {\n    return (\n        <ResponsiveContainer>\n            <LineChart data={chart?.data}>\n              <Line\n                dot={false}\n                type=\"basis\"\n                dataKey={chart?.name}\n                stroke={chart?.strokeColor}\n                strokeWidth={3}\n              />\n                <Tooltip formatter={(value) => new Intl.NumberFormat('en').format(value)} labelFormatter={(value) => ''} />\n            </LineChart>\n          </ResponsiveContainer>\n    )\n}\n","import React from \"react\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { Card } from \"../card/card\";\nimport { CVLineChart } from \"../chart/line/lineChart\";\nimport \"./stats-card.scss\";\n\nexport const StatsCard = ({ card, chart }) => {\n  return (\n    <Card>\n      <div className={\"cv-stats-card \" + card.cardClass}>\n        <p className=\"cv-label\">{card?.label}</p>\n        <div className=\"cv-count-container\">\n          <p className=\"cv-count\">{card?.value?.toLocaleString(\"hi\")}</p>\n          {card?.delta > 0 && (\n            <p className=\"cv-delta\">\n              <FaArrowUp className=\"cv-icon\" />\n              {card?.delta?.toLocaleString(\"hi\")}\n            </p>\n          )}\n        </div>\n        {chart && (\n          <div className=\"cv-chart-container\">\n            <CVLineChart chart={chart}></CVLineChart>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\nimport './pieChart.scss';\n\nexport const CVPieChart = ({ pieData, title }) => {\n  const COLORS = [\"#109CF1\", \"#2ED47A\", \"#885AF8\", \"#F7685B\"];\n  return (\n    <div className=\"cv-pie-container\">\n      <b>{title}</b>\n      <PieChart height={250} width={350}>\n        <Pie\n          data={pieData}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n          dataKey=\"value\"\n        >\n          {pieData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Legend iconType=\"circle\" fontSize={4} />\n      </PieChart>\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./home.scss\";\nimport { getCovidDataAPI, getTimeSeriesAPI } from \"../../constants/endpoints\";\nimport { DropDown } from \"../../components/select/select\";\nimport { statesConfig } from \"../../constants/states\";\nimport { Table } from \"../../components/table/table\";\nimport { StatsCard } from \"../../components/stats-card/stats-card\";\nimport { CVPieChart } from \"../../components/chart/pie/pieChart\";\n\nconst Home = () => {\n  const [cards, setCards] = useState(null);\n  const [charts, setCharts] = useState(null);\n  const [pieCharts, setPieCharts] = useState(null);\n  const [states, setStates] = useState({\n    states: [],\n  });\n\n  const [mainData, setMainData] = useState(null);\n  const [tableData, setTableData] = useState(null);\n  const [timeSeries, setTimeSeries] = useState(null);\n  const [statesLoading, setStatesLoading] = useState(true);\n\n  const [currentState, setCurrentState] = useState(\"TT\");\n\n  useEffect(() => {\n    fetchStates();\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(getCovidDataAPI()).then((covidDataResponse) => {\n        const tempdashdata = covidDataResponse.data;\n        setMainData(tempdashdata);\n        let tempCards = [\n          {\n            label: \"Confirmed\",\n            value: tempdashdata?.[currentState]?.total?.confirmed,\n            delta: tempdashdata?.[currentState]?.delta?.confirmed,\n            cardClass: \"cv-alert\",\n          },\n          {\n            label: \"Active\",\n            value:\n              tempdashdata?.[currentState]?.total?.confirmed -\n              (tempdashdata?.[currentState]?.total?.deceased +\n                tempdashdata?.[currentState]?.total?.recovered),\n            delta: 0,\n            cardClass: \"cv-primary\",\n          },\n          {\n            label: \"Recovered\",\n            value: tempdashdata?.[currentState]?.total?.recovered,\n            delta: tempdashdata?.[currentState]?.delta?.recovered,\n            cardClass: \"cv-success\",\n          },\n          {\n            label: \"Deceased\",\n            value: tempdashdata?.[currentState]?.total?.deceased,\n            delta: tempdashdata?.[currentState]?.delta?.deceased,\n            cardClass: \"cv-warning\",\n          },\n          {\n            label: \"Tested\",\n            value: tempdashdata?.[currentState]?.total?.tested,\n            delta: tempdashdata?.[currentState]?.delta7?.tested,\n            cardClass: \"cv-info\",\n          },\n          {\n            label: \"Partially vaccinated\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated1,\n            delta: tempdashdata?.[currentState]?.delta7?.vaccinated1,\n            cardClass: \"cv-success\",\n          },\n          {\n            label: \"Fully vaccinated\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated2,\n            delta: tempdashdata?.[currentState]?.delta7?.vaccinated2,\n            cardClass: \"cv-primary\",\n          },\n          {\n            label: \"Vaccinated\",\n            value:\n              tempdashdata?.[currentState]?.total?.vaccinated2 +\n              tempdashdata?.[currentState]?.total?.vaccinated1,\n            delta:\n              tempdashdata?.[currentState]?.delta7?.vaccinated2 +\n              tempdashdata?.[currentState]?.delta7?.vaccinated2,\n            cardClass: \"cv-info\",\n          },\n        ];\n        let pieChartsData = [];\n        pieChartsData.push([\n          {\n            name: \"Confirmed\",\n            value: tempdashdata?.[currentState]?.total?.confirmed,\n          },\n          {\n            name: \"Active\",\n            value:\n              tempdashdata?.[currentState]?.total?.confirmed -\n              (tempdashdata?.[currentState]?.total?.deceased +\n                tempdashdata?.[currentState]?.total?.recovered),\n          },\n          {\n            name: \"Recovered\",\n            value: tempdashdata?.[currentState]?.total?.recovered,\n          },\n          {\n            name: \"Deceased\",\n            value: tempdashdata?.[currentState]?.total?.deceased,\n          },\n          {\n            name: \"Others\",\n            value: tempdashdata?.[currentState]?.total?.other,\n          },\n        ]);\n        pieChartsData.push([\n          {\n            name: \"Dose1\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated1,\n          },\n          {\n            name: \"Dose2\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated2,\n          },\n        ]);\n        setPieCharts(pieChartsData);\n        setCards(tempCards);\n      });\n      axios.get(getTimeSeriesAPI()).then((timeSeriesResponse) => {\n        const jsonData = timeSeriesResponse.data;\n        setTimeSeries(jsonData);\n        let chartData = [];\n        Object.keys(jsonData[currentState].dates).forEach((item, index) => {\n          if (index % 15 === 0) {\n            chartData.push({\n              name: item,\n              confirm: jsonData[currentState].dates[item].delta7?.confirmed\n                ? jsonData[currentState].dates[item].delta7?.confirmed\n                : 0,\n              active: getActive(\n                jsonData[currentState].dates[item].delta7?.confirmed,\n                jsonData[currentState].dates[item].delta7?.recovered,\n                jsonData[currentState].dates[item].delta7?.deceased\n              ),\n              recovered: jsonData[currentState].dates[item].delta7?.recovered\n                ? jsonData[currentState].dates[item].delta7?.recovered\n                : 0,\n              deceased: jsonData[currentState].dates[item].delta7?.deceased\n                ? jsonData[currentState].dates[item].delta7?.deceased\n                : 0,\n              tested: jsonData[currentState].dates[item].delta7?.tested\n                ? jsonData[currentState].dates[item].delta7?.tested\n                : 0,\n              dose_1: jsonData[currentState].dates[item].delta7?.vaccinated1\n                ? jsonData[currentState].dates[item].delta7?.vaccinated1\n                : 0,\n              dose_2: jsonData[currentState].dates[item].delta7?.vaccinated2\n                ? jsonData[currentState].dates[item].delta7?.vaccinated2\n                : 0,\n              vaccine:\n                jsonData[currentState].dates[item].delta7?.vaccinated2 +\n                jsonData[currentState].dates[item].delta7?.vaccinated1\n                  ? jsonData[currentState].dates[item].delta7?.vaccinated2 +\n                    jsonData[currentState].dates[item].delta7?.vaccinated1\n                  : 0,\n            });\n          }\n        });\n        let tempCharts = [\n          {\n            name: \"confirmed\",\n            data: chartData.map((x) => {\n              return { name: x.name, confirmed: x.confirm };\n            }),\n            strokeColor: \"#F7685B\",\n          },\n          {\n            name: \"active\",\n            data: chartData.map((x) => {\n              return { name: x.name, active: x.active };\n            }),\n            strokeColor: \"#109CF1\",\n          },\n          {\n            name: \"recovered\",\n            data: chartData.map((x) => {\n              return { name: x.name, recovered: x.recovered };\n            }),\n            strokeColor: \"#2ED47A\",\n          },\n          {\n            name: \"deceased\",\n            data: chartData.map((x) => {\n              return { name: x.name, deceased: x.deceased };\n            }),\n            strokeColor: \"#FFB946\",\n          },\n          {\n            name: \"tested\",\n            data: chartData.map((x) => {\n              return { name: x.name, tested: x.tested };\n            }),\n            strokeColor: \"#885AF8\",\n          },\n          {\n            name: \"dose_1\",\n            data: chartData.map((x) => {\n              return { name: x.name, dose_1: x.dose_1 };\n            }),\n            strokeColor: \"#2ED47A\",\n          },\n          {\n            name: \"dose_2\",\n            data: chartData.map((x) => {\n              return { name: x.name, dose_2: x.dose_2 };\n            }),\n            strokeColor: \"#109CF1\",\n          },\n          {\n            name: \"vaccine\",\n            data: chartData.map((x) => {\n              return { name: x.name, vaccine: x.vaccine };\n            }),\n            strokeColor: \"#885AF8\",\n          },\n        ];\n  \n        setCharts(tempCharts);\n      });\n    }, 5 * 1000)\n    return () => {\n      clearInterval(interval);\n    }\n    \n  }, [currentState]);\n\n  const fetchStates = () => {\n    let selectStatesFeed = statesConfig.map((v) => {\n      return { value: v.key, label: v.name };\n    });\n    setStates({ states: selectStatesFeed });\n    setStatesLoading(false);\n  };\n\n  const extractDataForTable = (satatesOrDistricts, rawData = []) => {\n    let meanigfulData = [];\n    Object.keys(rawData).forEach((item, index) => {\n      if (currentState === \"TT\") {\n        meanigfulData.push({\n          stateName: satatesOrDistricts.find((x) => x.value === item)?.label,\n          confirm: rawData[item].total?.confirmed\n            ? rawData[item].total?.confirmed\n            : 0,\n          active: getActive(\n            rawData[item].total?.confirmed,\n            rawData[item].total?.recovered,\n            rawData[item].total?.deceased\n          ),\n          recovered: rawData[item].total?.recovered\n            ? rawData[item].total?.recovered\n            : 0,\n          deceased: rawData[item].total?.deceased\n            ? rawData[item].total?.deceased\n            : 0,\n          tested: rawData[item].total?.tested ? rawData[item].total?.tested : 0,\n        });\n      } else {\n        if (item === currentState)\n          Object.keys(rawData[item]?.districts).forEach(\n            (district, districtIndex) => {\n              meanigfulData.push({\n                districtName: district,\n                confirm: rawData[item].districts[district].total?.confirmed\n                  ? rawData[item].districts[district].total?.confirmed\n                  : 0,\n                active: getActive(\n                  rawData[item].districts[district].total?.confirmed,\n                  rawData[item].districts[district].total?.recovered,\n                  rawData[item].districts[district].total?.deceased\n                ),\n                recovered: rawData[item].districts[district].total?.recovered\n                  ? rawData[item].districts[district].total?.recovered\n                  : 0,\n                deceased: rawData[item].districts[district].total?.deceased\n                  ? rawData[item].districts[district].total?.deceased\n                  : 0,\n                tested: rawData[item].districts[district].total?.tested\n                  ? rawData[item].districts[district].total?.tested\n                  : 0,\n              });\n            }\n          );\n      }\n    });\n\n    return meanigfulData;\n  };\n\n  const getActive = (confirmed = 0, recovered = 0, deceased = 0) => {\n    return confirmed - (recovered + deceased);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (mainData && states.states.length > 0) {\n        setTableData(extractDataForTable(states.states, mainData));\n      }\n    }, 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentState, mainData]);\n\n  return (\n    <div className=\"cv-main-container\">\n      <DropDown\n        placeholder=\"State\"\n        data={states.states}\n        onStateChange={(e) => {\n          setCurrentState(e.value);\n        }}\n        isLoading={statesLoading}\n      ></DropDown>\n      <div className=\"cv-row\">\n        {cards\n          ? cards.map((x, i) => {\n              if (i < 4) {\n                return (\n                  <div className=\"cv-stats-card\">\n                    <StatsCard\n                      card={cards ? cards[i] : null}\n                      chart={charts ? charts[i] : null}\n                      key={i}\n                    ></StatsCard>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </div>\n      <div className=\"cv-row\">\n        {cards\n          ? cards.map((x, i) => {\n              if (i > 3) {\n                return (\n                  <div className=\"cv-stats-card\">\n                    <StatsCard\n                      card={cards ? cards[i] : null}\n                      chart={charts ? charts[i] : null}\n                      key={i}\n                    ></StatsCard>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </div>\n      <div className=\"cv-row\">\n        {pieCharts &&\n          pieCharts.map((item, index) => {\n            return (\n              <div className=\"cv-pie-chart-container\">\n                <CVPieChart pieData={item} className=\"pie-card\"></CVPieChart>\n              </div>\n            );\n          })}\n      </div>\n      {mainData && (\n        <div className=\"cv-stats-table\">\n          <Table\n            theaders={[\n              currentState === \"TT\" ? \"State\" : \"District\",\n              \"Confirmed\",\n              \"Active\",\n              \"Recovered\",\n              \"Deseased\",\n              \"Tested\",\n            ]}\n            tbody={tableData}\n            formatter={\"hi\"}\n          ></Table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","export const getTimeSeriesAPI = () => {\n  return \"https://data.covid19india.org/v4/min/timeseries.min.json\";\n};\n\nexport const getCovidDataAPI =()=> {\n    return 'https://data.covid19india.org/v4/min/data.min.json';\n}\n\nexport function GetStatesAPI() {\n  return \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\n}","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { CVPieChart } from \"../../components/chart/pie/pieChart\";\nimport { StatsCard } from \"../../components/stats-card/stats-card\";\nimport { Table } from \"../../components/table/table\";\nimport \"./vaccination.scss\";\nexport const Vaccination = () => {\n  const [publicReports, setPublicReports] = useState(null);\n  const [cards, setCards] = useState(null);\n  const [pieCharts, setPieCharts] = useState(null);\n  const [vaccinationTable, setVaccinationTable] = useState(null);\n  useEffect(() => {\n    const fetchVaccinationDetails = () => {\n    axios\n      .get(\n        \"https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports?state_id=&district_id=&date=\"\n      )\n      .then((responseData) => {\n        const response = responseData.data;\n        setPublicReports(response);\n        const vaccination = response?.topBlock?.vaccination;\n        const vaccinationByAge = response?.vaccinationByAge;\n        const beneficiariesGroupBy = response?.getBeneficiariesGroupBy;\n        let cardsData = [];\n        cardsData.push(\n          ...[\n            {\n              label: \"Vaccines\",\n              value: vaccination?.total,\n              delta: vaccination?.today,\n              cardClass: \"cv-info\",\n            },\n            {\n              label: \"Partially vaccinated\",\n              value: vaccination?.tot_dose_1,\n              delta: vaccination?.today_dose_one,\n              cardClass: \"cv-warning\",\n            },\n            {\n              label: \"Fully vaccinated\",\n              value: vaccination?.tot_dose_2,\n              delta: vaccination?.today_dose_two,\n              cardClass: \"cv-success\",\n            },\n            {\n              label: \"Covishield\",\n              value: vaccination?.covishield,\n              delta: 0,\n              cardClass: \"cv-alert\",\n            },\n            {\n              label: \"Covaxin\",\n              value: vaccination?.covaxin,\n              delta: 0,\n              cardClass: \"cv-info\",\n            },\n            {\n              label: \"Sputnik\",\n              value: vaccination?.sputnik,\n              delta: 0,\n              cardClass: \"cv-primary\",\n            },\n            {\n              label: \"Male\",\n              value: vaccination?.male,\n              delta: 0,\n              cardClass: \"cv-success\",\n            },\n            {\n              label: \"Female\",\n              value: vaccination?.female,\n              delta: 0,\n              cardClass: \"cv-primary\",\n            },\n            {\n              label: \"Others\",\n              value: vaccination?.others,\n              delta: 0,\n              cardClass: \"cv-info\",\n            },\n          ]\n        );\n\n        let pieChartsData = [];\n\n        pieChartsData.push(\n          ...[\n            {\n              title: \"Dose 1 vs Dose 2\",\n              data: [\n                { name: \"Dose1\", value: vaccination?.tot_dose_1 },\n                { name: \"Dose2\", value: vaccination?.tot_dose_2 },\n              ],\n            },\n            {\n              title: \"Vaccine brands\",\n              data: [\n                { name: \"Covishield\", value: vaccination?.covishield },\n                { name: \"Covaxin\", value: vaccination?.covaxin },\n                { name: \"Sputnik\", value: vaccination?.sputnik },\n              ],\n            },\n            {\n              title: \"Gender\",\n              data: [\n                { name: \"Male\", value: vaccination?.male },\n                { name: \"Female\", value: vaccination?.female },\n                { name: \"Others\", value: vaccination?.others },\n              ],\n            },\n            {\n              title: \"Vaccination by Age\",\n              data: [\n                { name: \"Above60\", value: vaccinationByAge?.above_60 },\n                { name: \"18-45\", value: vaccinationByAge?.vac_18_45 },\n                { name: \"45-60\", value: vaccinationByAge?.vac_45_60 },\n              ],\n            },\n          ]\n        );\n\n        let vaccinationTableData =[];\n        beneficiariesGroupBy.forEach((item,i)=> {\n          vaccinationTableData.push(\n            {\n              state_name:item.state_name,\n              total:item.total,\n              partial_vaccinated:item.partial_vaccinated,\n              today:item.today,\n              totally_vaccinated:item.totally_vaccinated\n            }\n          )\n        })\n        setVaccinationTable(vaccinationTableData);\n        setPieCharts(pieChartsData);\n        setCards(cardsData);\n      });\n    }\n\n    const interval = setInterval(() => fetchVaccinationDetails(), 5 * 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  }, []);\n  return (\n    <div className=\"cv-main-container\">\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i < 3)\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard card={item}></StatsCard>\n                </div>\n              );\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i >= 3 && i < 6)\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard card={item}></StatsCard>\n                </div>\n              );\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i >= 6 && i < 9)\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard card={item}></StatsCard>\n                </div>\n              );\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {pieCharts &&\n          pieCharts.map((item, index) => {\n            return (\n              <div className=\"cv-pie-chart-container\">\n                <CVPieChart\n                  pieData={item.data}\n                  title={item.title}\n                  className=\"pie-card\"\n                ></CVPieChart>\n              </div>\n            );\n          })}\n      </div>\n\n      {vaccinationTable && (\n        <div className=\"cv-stats-table\">\n          <Table\n            theaders={[\n              \"State\",\n              \"Total\",\n              \"Partial vaccinated\",\n              \"Today\",\n              \"Totally vaccinated\"\n            ]}\n            tbody={vaccinationTable}\n            formatter={\"hi\"}\n          ></Table>\n        </div>\n      )}\n    </div>\n  );\n};\n","import \"./App.scss\";\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\n\nimport { Header } from \"./components/header/header\";\nimport Home from \"./pages/home/home\";\nimport { Vaccination } from \"./pages/vaccination/vaccination\";\n\nfunction App() {\n  // axios.interceptors.request.use(function (config) {\n\n  //   // spinning start to show\n  //   // UPDATE: Add this code to show global loading indicator\n  //   // document.body.classList.add('loading-indicator');\n\n  //   // const token = window.localStorage.token;\n  //   // if (token) {\n  //   //    config.headers.Authorization = `token ${token}`\n  //   // }\n  //   console.log('request start')\n\n  //   return config\n  // }, function (error) {\n  //   return Promise.reject(error);\n  // });\n\n  // axios.interceptors.response.use(function (response) {\n\n  //   // spinning hide\n  //   // UPDATE: Add this code to hide global loading indicator\n  //  // document.body.classList.remove('loading-indicator');\n\n  //   console.log('request done')\n  //   return response;\n  // }, function (error) {\n  //   return Promise.reject(error);\n  // });\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path='/vaccination' component={Vaccination} />\n          <Route path=\"*\" component={Home}>\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}