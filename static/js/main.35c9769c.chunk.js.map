{"version":3,"sources":["components/header/header.js","components/chart/chart.js","components/card/card.js","pages/home/home.js","constants/endpoints.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Chart","chart","ResponsiveContainer","LineChart","data","Line","dot","type","dataKey","name","stroke","strokeColor","strokeWidth","Card","card","cardClass","label","value","toLocaleString","delta","getActive","confirmed","recovered","deceased","Home","useState","cards","setCards","charts","setCharts","useEffect","axios","get","then","covidDataResponse","tempdashdata","tempCards","TT","total","timeSeriesResponse","jsonData","chartData","Object","keys","dates","forEach","item","index","push","confirm","delta7","active","tempCharts","map","x","i","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35c9769c.chunk.js","sourcesContent":["import React from 'react'\nimport './header.scss'\nexport const Header = () => {\n    return (\n        <div className=\"cv-toolbar\">\n            <h2 className=\"cv-brand\">Covid-19 India</h2>\n        </div>\n    )\n}\n","import React from 'react'\nimport { LineChart, Line, ResponsiveContainer } from \"recharts\";\n\nexport const Chart = ({chart}) => {\n    return (\n        <ResponsiveContainer>\n            <LineChart data={chart?.data}>\n              <Line\n                dot={false}\n                type=\"natural\"\n                dataKey={chart?.name}\n                stroke={chart?.strokeColor}\n                strokeWidth={3}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n    )\n}\n","import React from 'react'\nimport { LineChart, Line, ResponsiveContainer } from \"recharts\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { Chart } from '../chart/chart';\nexport const Card = ({card, chart}) => {\n    return (\n        <div className={\"cv-card \" + card.cardClass}>\n        <span className=\"cv-label\">{card?.label}</span>\n        <span className=\"cv-count\">\n          {card?.value?.toLocaleString()}\n          {card?.delta !== 0 && (\n            <span className=\"cv-delta\">\n              <FaArrowUp className=\"cv-icon\" />\n              {card?.delta?.toLocaleString()}\n            </span>\n          )}\n        </span>\n        <div className=\"cv-chart-container\">\n          <Chart chart={chart}></Chart>\n        </div>\n      </div>\n    )\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, ResponsiveContainer } from \"recharts\";\nimport { FaArrowUp, FaRegClock } from \"react-icons/fa\";\n\nimport \"./home.scss\";\nimport { Card } from \"../../components/card/card\";\nimport { getCovidDataAPI, getTimeSeriesAPI } from \"../../constants/endpoints\";\n\nconst Home = () => {\n\n  const [cards, setCards] = useState(null);\n  const [charts, setCharts] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(getCovidDataAPI())\n      .then((covidDataResponse) => {\n        const tempdashdata = covidDataResponse.data;\n        let tempCards = [\n          {\n            label: \"confirmed\",\n            value: tempdashdata?.TT.total.confirmed,\n            delta: tempdashdata?.TT.delta.confirmed,\n            cardClass: \"cv-alert\",\n          },\n          {\n            label: \"active\",\n            value:\n              tempdashdata?.TT.total.confirmed -\n              (tempdashdata?.TT.total.deceased +\n                tempdashdata?.TT.total.recovered),\n            delta: 0,\n            cardClass: \"cv-primary\",\n          },\n          {\n            label: \"recovered\",\n            value: tempdashdata?.TT.total.recovered,\n            delta: tempdashdata?.TT.delta.recovered,\n            cardClass: \"cv-success\",\n          },\n          {\n            label: \"deceased\",\n            value: tempdashdata?.TT.total.deceased,\n            delta: tempdashdata?.TT.delta.deceased,\n            cardClass: \"cv-warning\",\n          },\n        ];\n\n        setCards(tempCards);\n          });\n          axios\n          .get(getTimeSeriesAPI())\n          .then((timeSeriesResponse) => {\n            const jsonData = timeSeriesResponse.data;\n            let chartData = [];\n            Object.keys(jsonData.TT.dates).forEach((item, index) => {\n              if (index % 15 === 0) {\n                chartData.push({\n                  name: item,\n                  confirm: jsonData.TT.dates[item].delta7?.confirmed\n                    ? jsonData.TT.dates[item].delta7?.confirmed\n                    : 0,\n                  active: getActive(\n                    jsonData.TT.dates[item].delta7?.confirmed,\n                    jsonData.TT.dates[item].delta7?.recovered,\n                    jsonData.TT.dates[item].delta7?.deceased\n                  ),\n                  recovered: jsonData.TT.dates[item].delta7?.recovered\n                    ? jsonData.TT.dates[item].delta7?.recovered\n                    : 0,\n                  deceased: jsonData.TT.dates[item].delta7?.deceased\n                    ? jsonData.TT.dates[item].delta7?.deceased\n                    : 0,\n                });\n              }\n            });\n           let tempCharts = [\n              {\n                name: \"confirmed\",\n                data: chartData.map((x) => {\n                  return { name: x.name, confirmed: x.confirm };\n                }),\n                strokeColor: \"#F7685B\",\n              },\n              {\n                name: \"active\",\n                data: chartData.map((x) => {\n                  return { name: x.name, active: x.active };\n                }),\n                strokeColor: \"#109CF1\",\n              },\n              {\n                name: \"recovered\",\n                data: chartData.map((x) => {\n                  return { name: x.name, recovered: x.recovered };\n                }),\n                strokeColor: \"#2ED47A\",\n              },\n              {\n                name: \"deceased\",\n                data: chartData.map((x) => {\n                  return { name: x.name, deceased: x.deceased };\n                }),\n                strokeColor: \"#FFB946\",\n              },\n            ];\n\n            setCharts(tempCharts);\n      });\n  }, []);\n\n  return (\n    <div className=\"cv-home\">\n      <div className=\"cv-row\">\n        {cards ? cards.map((x,i)=> {return <Card\n          card={cards ? cards[i] : null}\n          chart={charts ? charts[i] : null}\n        ></Card>}) : null}\n      </div>\n    </div>\n  );\n};\n\nconst getActive = (confirmed = 0, recovered = 0, deceased = 0) => {\n  return confirmed - (recovered + deceased);\n};\n\nexport default Home;\n","export const getTimeSeriesAPI = () => {\n  return \"https://data.covid19india.org/v4/min/timeseries.min.json\";\n};\n\nexport const getCovidDataAPI =()=> {\n    return 'https://data.covid19india.org/v4/min/data.min.json';\n}\n","import './App.scss';\nimport { Header } from './components/header/header';\nimport Home from './pages/home/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}