{"version":3,"sources":["components/select/select.js","components/table/table.js","components/chart/line/lineChart.js","components/stats-card/stats-card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/vaccination/vaccination.js","components/card/card.js","components/chart/pie/pieChart.js"],"names":["DropDown","onStateChange","data","isLoading","placeholder","React","useState","selectedOption","setSelectedOption","customStyles","option","provided","state","borderBottom","color","isSelected","singleValue","opacity","isDisabled","transition","className","value","onChange","selectedItem","options","styles","Table","theaders","tbody","formatter","onRowClick","map","x","i","onClick","getValuesFromObject","y","toLocaleString","object","values","Object","keys","forEach","push","CVLineChart","chart","ResponsiveContainer","LineChart","Line","dot","type","dataKey","name","stroke","strokeColor","strokeWidth","Tooltip","Intl","NumberFormat","format","labelFormatter","StatsCard","card","cardClass","label","delta","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","getTableData","beneficiariesGroupBy","currentState","currentDistrict","vaccinationTableData","item","state_name","district_id","title","total","partial_vaccinated","today","totally_vaccinated","district_name","getPieChartData","vaccination","vaccinationByAge","pieChartsData","tot_dose_1","tot_dose_2","covishield","covaxin","sputnik","male","female","others","above_60","vac_18_45","vac_45_60","getCardsData","cardsData","today_dose_one","today_dose_two","today_female","today_male","today_others","getLineChartData","weeklyReport","weeklyVacAgeWiseReport","lineChartsData","startdate","dose1","dose2","above60","vac_60_above","age45_60","age18_45","getStatesFromRawData","state_id","Vaccination","publicReports","setPublicReports","setVaccinePublicReports","cards","setCards","pieCharts","setPieCharts","lineCharts","setLineCharts","vaccinationTable","setVaccinationTable","states","setStates","setCurrentState","districts","setDistricts","setCurrentDistrict","useEffect","axios","get","then","responseData","PublicReportsResponse","topBlock","getBeneficiariesGroupBy","error","console","log","response","vaccinePublicReportsJson","e","index","pieData","row","window","scrollTo","top","behavior","find","Card","props","children","CVPieChart","COLORS","height","width","innerRadius","outerRadius","fill","paddingAngle","entry","length","iconType","fontSize"],"mappings":"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","file":"static/js/5.3115999b.chunk.js","sourcesContent":["import React from \"react\";\nimport Select from \"react-select\";\nimport \"./select.scss\";\nexport const DropDown =({onStateChange,data,isLoading,placeholder})=> {\n  const [selectedOption, setSelectedOption] = React.useState('TT');\n  const handleChange = (selectedItem) => {\n    setSelectedOption(selectedItem);\n    onStateChange(selectedItem);\n  };\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted pink',\n      color: state.isSelected ? 'red' : 'blue',\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n  \n      return { ...provided, opacity, transition };\n    }\n  }\n\n  return (\n    <div className=\"select\">\n      <Select\n        value={selectedOption}\n        onChange={handleChange}\n        options={data}\n        placeholder={\"Select \" + placeholder}\n        isLoading={isLoading} styles={customStyles}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"../card/card\";\nimport \"./table.scss\";\n\nexport const Table = ({ theaders, tbody, formatter, onRowClick }) => {\n  const handleClick =(item)=>{\n    onRowClick(item);\n  }\n  return (\n    <Card>\n      <div className=\"cv-table\">\n        <table>\n          <thead>\n            <tr>\n              {theaders.map((x, i) => {\n                return <th key={i}>{x}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {tbody?.map((x, i) => {\n              return (\n                <tr key={i} onClick={()=>handleClick(x)}>\n                  {getValuesFromObject(x).map((y) => {\n                    return <td>{y.toLocaleString(formatter)}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n};\n\nconst getValuesFromObject = (object) => {\n  let values = [];\n  Object.keys(object).forEach((x) => {\n    values.push(object[x]);\n  });\n\n  return values;\n};\n","import React from 'react'\nimport { LineChart, Line, ResponsiveContainer, Tooltip } from \"recharts\";\n\nexport const CVLineChart = ({chart}) => {\n    return (\n        <ResponsiveContainer>\n            <LineChart data={chart?.data}>\n              <Line\n                dot={false}\n                type=\"basis\"\n                dataKey={chart?.name}\n                stroke={chart?.strokeColor}\n                strokeWidth={3}\n              />\n                <Tooltip formatter={(value) => new Intl.NumberFormat('en').format(value)} labelFormatter={(value) => ''} />\n            </LineChart>\n          </ResponsiveContainer>\n    )\n}\n","import React from \"react\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { Card } from \"../card/card\";\nimport { CVLineChart } from \"../chart/line/lineChart\";\nimport \"./stats-card.scss\";\n\nexport const StatsCard = ({ card, chart }) => {\n  return (\n    <Card>\n      <div className={\"cv-stats-card \" + card.cardClass}>\n        <p className=\"cv-label\">{card?.label}</p>\n        <div className=\"cv-count-container\">\n          <p className=\"cv-count\">{card?.value?.toLocaleString(\"hi\")}</p>\n          {card?.delta > 0 && (\n            <p className=\"cv-delta\">\n              <FaArrowUp className=\"cv-icon\" />\n              {card?.delta?.toLocaleString(\"hi\")}\n            </p>\n          )}\n        </div>\n        {chart && (\n          <div className=\"cv-chart-container\">\n            <CVLineChart chart={chart}></CVLineChart>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { CVPieChart } from \"../../components/chart/pie/pieChart\";\nimport { DropDown } from \"../../components/select/select\";\nimport { StatsCard } from \"../../components/stats-card/stats-card\";\nimport { Table } from \"../../components/table/table\";\nimport \"./vaccination.scss\";\nconst Vaccination = () => {\n  const [publicReports, setPublicReports] = useState(null);\n  const [vaccinePublicReports, setVaccinePublicReports] = useState(null);\n  const [cards, setCards] = useState(null);\n  const [pieCharts, setPieCharts] = useState(null);\n  const [lineCharts, setLineCharts] = useState(null);\n  const [vaccinationTable, setVaccinationTable] = useState(null);\n  const [states, setStates] = useState(null);\n  const [currentState, setCurrentState] = useState(\"\");\n  const [districts, setDistricts] = useState(null);\n  const [currentDistrict, setCurrentDistrict] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports?state_id=${currentState}&district_id=${currentDistrict}&date=`\n      )\n      .then(\n        (responseData) => {\n          const PublicReportsResponse = responseData.data;\n          if (PublicReportsResponse) {\n            setPublicReports(PublicReportsResponse);\n            const vaccination = PublicReportsResponse?.topBlock?.vaccination;\n            const vaccinationByAge = PublicReportsResponse?.vaccinationByAge;\n            const beneficiariesGroupBy =\n              PublicReportsResponse?.getBeneficiariesGroupBy;\n\n            setPieCharts(getPieChartData(vaccination, vaccinationByAge));\n            setCards(getCardsData(vaccination, vaccinationByAge));\n            if (currentState === \"\") {\n              setStates(getStatesFromRawData(beneficiariesGroupBy, \"\"));\n              setVaccinationTable(getTableData(beneficiariesGroupBy, \"\", \"\"));\n\n              setDistricts(null);\n              setCurrentDistrict(\"\");\n            } else if (currentState !== \"\" && currentDistrict === \"\") {\n              setDistricts(\n                getStatesFromRawData(beneficiariesGroupBy, currentState)\n              );\n              setVaccinationTable(\n                getTableData(beneficiariesGroupBy, currentState, \"\")\n              );\n            }\n          }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    axios\n      .get(\n        `https://api.cowin.gov.in/api/v1/reports/v2/getVacPublicReports?state_id=${currentState}&district_id=${currentDistrict}&date`\n      )\n      .then(\n        (response) => {\n          const vaccinePublicReportsJson = response.data;\n          if (publicReports && vaccinePublicReportsJson) {\n            setVaccinePublicReports(vaccinePublicReportsJson);\n            const weeklyReport = response.data?.weeklyReport;\n            const weeklyVacAgeWiseReport =\n              response.data?.weeklyVacAgeWiseReport;\n\n            setLineCharts(\n              getLineChartData(weeklyReport, weeklyVacAgeWiseReport)\n            );\n          }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, [currentState, currentDistrict]);\n\n  const handleTableRowClick = (row) => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n    if (row.state_name) {\n      setCurrentState(states.find((x) => x.label === row.state_name).value);\n    } else if (row.district_name) {\n      setCurrentDistrict(\n        districts.find((x) => x.label === row.district_name).value\n      );\n    }\n  };\n  return (\n    <div className=\"cv-main-container\">\n      {states && (\n        <DropDown\n          placeholder=\"State\"\n          data={states}\n          onStateChange={(e) => {\n            setCurrentState(e.value);\n            setCurrentDistrict(\"\");\n          }}\n          isLoading={false}\n        ></DropDown>\n      )}\n      {districts && (\n        <DropDown\n          placeholder=\"Districts\"\n          data={districts}\n          onStateChange={(e) => {\n            setCurrentDistrict(e.value);\n          }}\n          isLoading={false}\n        ></DropDown>\n      )}\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i < 3) {\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard\n                    card={item}\n                    key={\"card-\" + i}\n                    chart={lineCharts && i < 3 ? lineCharts[i] : null}\n                  ></StatsCard>\n                </div>\n              );\n            }\n            return null;\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i >= 3 && i < 6) {\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard card={item} key={\"card-\" + i}></StatsCard>\n                </div>\n              );\n            }\n            return null;\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i >= 6 && i < 9) {\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard card={item} key={\"card-\" + i}></StatsCard>\n                </div>\n              );\n            }\n            return null;\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {cards &&\n          cards.map((item, i) => {\n            if (i >= 9 && i < 12) {\n              return (\n                <div className=\"cv-stats-card\">\n                  <StatsCard\n                    card={item}\n                    key={\"card-\" + i}\n                    chart={lineCharts && i > 2 ? lineCharts[i - 6] : null}\n                  ></StatsCard>\n                </div>\n              );\n            }\n            return null;\n          })}\n      </div>\n      <div className=\"cv-row\">\n        {pieCharts &&\n          pieCharts.map((item, index) => {\n            return (\n              <div\n                className=\"cv-pie-chart-container\"\n                key={\"pie-container-\" + index}\n              >\n                <CVPieChart\n                  pieData={item.data}\n                  title={item.title}\n                  className=\"pie-card\"\n                  key={\"pie-\" + index}\n                ></CVPieChart>\n              </div>\n            );\n          })}\n      </div>\n\n      {vaccinationTable && currentDistrict === \"\" && (\n        <div className=\"cv-stats-table\">\n          <Table\n            theaders={[\n              currentState === \"\" ? \"State\" : \"District\",\n              \"Total\",\n              \"Partial vaccinated\",\n              \"Today\",\n              \"Totally vaccinated\",\n            ]}\n            tbody={vaccinationTable}\n            formatter={\"hi\"}\n            key={\"table-1\"}\n            onRowClick={(e) => handleTableRowClick(e)}\n          ></Table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getTableData = (\n  beneficiariesGroupBy,\n  currentState = \"\",\n  currentDistrict = \"\"\n) => {\n  let vaccinationTableData = [];\n  beneficiariesGroupBy.forEach((item, i) => {\n    if (currentState === \"\") {\n      vaccinationTableData.push({\n        state_name: item.district_id ? item.title : item.state_name,\n        total: item.total,\n        partial_vaccinated: item.partial_vaccinated,\n        today: item.today,\n        totally_vaccinated: item.totally_vaccinated,\n      });\n    } else if (currentDistrict === \"\") {\n      vaccinationTableData.push({\n        district_name: item.district_id ? item.title : item.state_name,\n        total: item.total,\n        partial_vaccinated: item.partial_vaccinated,\n        today: item.today,\n        totally_vaccinated: item.totally_vaccinated,\n      });\n    }\n  });\n\n  return vaccinationTableData;\n};\n\nconst getPieChartData = (vaccination, vaccinationByAge) => {\n  let pieChartsData = [];\n  pieChartsData.push(\n    ...[\n      {\n        title: \"Dose 1 vs Dose 2\",\n        data: [\n          { name: \"Dose1\", value: vaccination?.tot_dose_1 },\n          { name: \"Dose2\", value: vaccination?.tot_dose_2 },\n        ],\n      },\n      {\n        title: \"Vaccine brands\",\n        data: [\n          { name: \"Covishield\", value: vaccination?.covishield },\n          { name: \"Covaxin\", value: vaccination?.covaxin },\n          { name: \"Sputnik\", value: vaccination?.sputnik },\n        ],\n      },\n      {\n        title: \"Gender\",\n        data: [\n          { name: \"Male\", value: vaccination?.male },\n          { name: \"Female\", value: vaccination?.female },\n          { name: \"Others\", value: vaccination?.others },\n        ],\n      },\n      {\n        title: \"Vaccination by Age\",\n        data: [\n          { name: \"Above60\", value: vaccinationByAge?.above_60 },\n          { name: \"18-45\", value: vaccinationByAge?.vac_18_45 },\n          { name: \"45-60\", value: vaccinationByAge?.vac_45_60 },\n        ],\n      },\n    ]\n  );\n\n  return pieChartsData;\n};\n\nconst getCardsData = (vaccination, vaccinationByAge) => {\n  let cardsData = [];\n  cardsData.push(\n    ...[\n      {\n        label: \"Vaccines\",\n        value: vaccination?.total,\n        delta: vaccination?.today,\n        cardClass: \"cv-info\",\n      },\n      {\n        label: \"Partially vaccinated\",\n        value: vaccination?.tot_dose_1,\n        delta: vaccination?.today_dose_one,\n        cardClass: \"cv-warning\",\n      },\n      {\n        label: \"Fully vaccinated\",\n        value: vaccination?.tot_dose_2,\n        delta: vaccination?.today_dose_two,\n        cardClass: \"cv-success\",\n      },\n      {\n        label: \"Covishield\",\n        value: vaccination?.covishield,\n        delta: 0,\n        cardClass: \"cv-alert\",\n      },\n      {\n        label: \"Covaxin\",\n        value: vaccination?.covaxin,\n        delta: 0,\n        cardClass: \"cv-info\",\n      },\n      {\n        label: \"Sputnik\",\n        value: vaccination?.sputnik,\n        delta: 0,\n        cardClass: \"cv-primary\",\n      },\n      {\n        label: \"Male\",\n        value: vaccination?.male,\n        delta: vaccination?.today_female ? vaccination?.today_male : 0,\n        cardClass: \"cv-success\",\n      },\n      {\n        label: \"Female\",\n        value: vaccination?.female,\n        delta: vaccination?.today_female ? vaccination?.today_female : 0,\n        cardClass: \"cv-primary\",\n      },\n      {\n        label: \"Others\",\n        value: vaccination?.others,\n        delta: vaccination?.today_female ? vaccination?.today_others : 0,\n        cardClass: \"cv-info\",\n      },\n      {\n        label: \"Age above 60\",\n        value: vaccinationByAge?.above_60,\n        delta: 0,\n        cardClass: \"cv-success\",\n      },\n      {\n        label: \"Age 45-60\",\n        value: vaccinationByAge?.vac_45_60,\n        delta: 0,\n        cardClass: \"cv-primary\",\n      },\n      {\n        label: \"Age 18-45\",\n        value: vaccinationByAge?.vac_18_45,\n        delta: 0,\n        cardClass: \"cv-info\",\n      },\n    ]\n  );\n\n  return cardsData;\n};\n\nconst getLineChartData = (weeklyReport, weeklyVacAgeWiseReport) => {\n  let lineChartsData = [];\n  lineChartsData.push(\n    ...[\n      {\n        name: \"total\",\n        data: weeklyReport?.map((x) => {\n          return { name: x.startdate, total: x.total };\n        }),\n        strokeColor: \"#885AF8\",\n      },\n      {\n        name: \"dose1\",\n        data: weeklyReport.map((x) => {\n          return { name: x.startdate, dose1: x.dose1 };\n        }),\n        strokeColor: \"#FFB946\",\n      },\n      {\n        name: \"dose2\",\n        data: weeklyReport.map((x) => {\n          return { name: x.startdate, dose2: x.dose2 };\n        }),\n        strokeColor: \"#2ED47A\",\n      },\n\n      {\n        name: \"above60\",\n        data: weeklyVacAgeWiseReport.map((x) => {\n          return { name: x.startdate, above60: x.vac_60_above };\n        }),\n        strokeColor: \"#2ED47A\",\n      },\n      {\n        name: \"age45_60\",\n        data: weeklyVacAgeWiseReport.map((x) => {\n          return { name: x.startdate, age45_60: x.vac_45_60 };\n        }),\n        strokeColor: \"#109CF1\",\n      },\n      {\n        name: \"age18_45\",\n        data: weeklyVacAgeWiseReport.map((x) => {\n          return { name: x.startdate, age18_45: x.vac_18_45 };\n        }),\n        strokeColor: \"#885AF8\",\n      },\n    ]\n  );\n  return lineChartsData;\n};\n\nconst getStatesFromRawData = (beneficiariesGroupBy, currentState) => {\n  if (currentState === \"\") {\n    return [{ title: \"India\", state_id: \"\" }, ...beneficiariesGroupBy].map(\n      (item) => {\n        return { value: item.state_id, label: item.title };\n      }\n    );\n  } else {\n    return [\n      { title: beneficiariesGroupBy[0].state_name, district_id: \"\" },\n      ...beneficiariesGroupBy,\n    ].map((item) => {\n      return { value: item.district_id, label: item.title };\n    });\n  }\n};\n\nexport default Vaccination;\n","import React from \"react\";\nimport \"./card.scss\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"cv-card \">\n      {props.children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\nimport './pieChart.scss';\n\nexport const CVPieChart = ({ pieData, title }) => {\n  const COLORS = [\"#109CF1\", \"#2ED47A\", \"#885AF8\", \"#F7685B\"];\n  return (\n    <div className=\"cv-pie-container\">\n      <b>{title}</b>\n      <PieChart height={250} width={350}>\n        <Pie\n          data={pieData}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={0}\n          dataKey=\"value\"\n        >\n          {pieData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Legend iconType=\"circle\" fontSize={4} />\n      </PieChart>\n    </div>\n  );\n};\n"],"sourceRoot":""}