{"version":3,"sources":["components/header/header.js","components/chart/chart.js","components/card/card.js","components/select/select.js","constants/states.js","pages/home/home.js","constants/endpoints.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Chart","chart","ResponsiveContainer","LineChart","data","Line","dot","type","dataKey","name","stroke","strokeColor","strokeWidth","Card","card","cardClass","label","value","toLocaleString","delta","DropDown","onStateChange","isLoading","placeholder","React","useState","selectedOption","setSelectedOption","onChange","selectedItem","options","statesConfig","key","getActive","confirmed","recovered","deceased","Home","cards","setCards","charts","setCharts","states","setStates","statesLoading","setStatesLoading","currentState","setCurrentState","useEffect","selectStatesFeed","map","v","fetchStates","axios","get","then","covidDataResponse","tempdashdata","tempCards","total","timeSeriesResponse","jsonData","chartData","Object","keys","dates","forEach","item","index","push","confirm","delta7","active","tempCharts","x","e","i","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe0fd6b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.scss'\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"cv-toolbar\">\r\n            <h2 className=\"cv-brand\">Covid-19 India</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { LineChart, Line, ResponsiveContainer } from \"recharts\";\r\n\r\nexport const Chart = ({chart}) => {\r\n    return (\r\n        <ResponsiveContainer>\r\n            <LineChart data={chart?.data}>\r\n              <Line\r\n                dot={false}\r\n                type=\"natural\"\r\n                dataKey={chart?.name}\r\n                stroke={chart?.strokeColor}\r\n                strokeWidth={3}\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FaArrowUp } from \"react-icons/fa\";\r\nimport { Chart } from '../chart/chart';\r\nexport const Card = ({card, chart}) => {\r\n    return (\r\n        <div className={\"cv-card \" + card.cardClass}>\r\n        <span className=\"cv-label\">{card?.label}</span>\r\n        <span className=\"cv-count\">\r\n          {card?.value?.toLocaleString()}\r\n          {card?.delta !== 0 && (\r\n            <span className=\"cv-delta\">\r\n              <FaArrowUp className=\"cv-icon\" />\r\n              {card?.delta?.toLocaleString()}\r\n            </span>\r\n          )}\r\n        </span>\r\n        <div className=\"cv-chart-container\">\r\n          <Chart chart={chart}></Chart>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"./select.scss\";\r\nexport const DropDown =({onStateChange,data,isLoading,placeholder})=> {\r\n  const [selectedOption, setSelectedOption] = React.useState('TT');\r\n  const handleChange = (selectedItem) => {\r\n    setSelectedOption(selectedItem);\r\n    onStateChange(selectedItem);\r\n  };\r\n  return (\r\n    <div className=\"select\">\r\n      <Select\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={data}\r\n        placeholder={\"Select \" + placeholder}\r\n        isLoading={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export const statesConfig = [\r\n  {\r\n    key: \"TT\",\r\n    name: \"India\",\r\n  },\r\n  {\r\n    key: \"AN\",\r\n    name: \"Andaman and Nicobar Islands\",\r\n  },\r\n  {\r\n    key: \"AP\",\r\n    name: \"Andhra Pradesh\",\r\n  },\r\n  {\r\n    key: \"AR\",\r\n    name: \"Arunachal Pradesh\",\r\n  },\r\n  {\r\n    key: \"AS\",\r\n    name: \"Assam\",\r\n  },\r\n  {\r\n    key: \"BR\",\r\n    name: \"Bihar\",\r\n  },\r\n  {\r\n    key: \"CH\",\r\n    name: \"Chhattisgarh\",\r\n  },\r\n  {\r\n    key: \"DL\",\r\n    name: \"Delhi\",\r\n  },\r\n  {\r\n    key: \"GA\",\r\n    name: \"Goa\",\r\n  },\r\n  {\r\n    key: \"GJ\",\r\n    name: \"Gujarat\",\r\n  },\r\n  {\r\n    key: \"HR\",\r\n    name: \"Haryana\",\r\n  },\r\n  {\r\n    key: \"HP\",\r\n    name: \"Himachal Pradesh\",\r\n  },\r\n  {\r\n    key: \"JK\",\r\n    name: \"Jammu and Kashmir\",\r\n  },\r\n  {\r\n    key: \"JH\",\r\n    name: \"Jharkhand\",\r\n  },\r\n  {\r\n    key: \"KA\",\r\n    name: \"Karnataka\",\r\n  },\r\n  {\r\n    key: \"KL\",\r\n    name: \"Kerala\",\r\n  },\r\n  {\r\n    key: \"LD\",\r\n    name: \"Lakshadweep\",\r\n  },\r\n  {\r\n    key: \"MP\",\r\n    name: \"Madhya Pradesh\",\r\n  },\r\n  {\r\n    key: \"MH\",\r\n    name: \"Maharashtra\",\r\n  },\r\n  {\r\n    key: \"MN\",\r\n    name: \"Manipur\",\r\n  },\r\n  {\r\n    key: \"ML\",\r\n    name: \"Meghalaya\",\r\n  },\r\n  {\r\n    key: \"MZ\",\r\n    name: \"Mizoram\",\r\n  },\r\n  {\r\n    key: \"NL\",\r\n    name: \"Nagaland\",\r\n  },\r\n  {\r\n    key: \"OR\",\r\n    name: \"Odisha\",\r\n  },\r\n  {\r\n    key: \"PY\",\r\n    name: \"Puducherry\",\r\n  },\r\n  {\r\n    key: \"PB\",\r\n    name: \"Punjab\",\r\n  },\r\n  {\r\n    key: \"RJ\",\r\n    name: \"Rajasthan\",\r\n  },\r\n  {\r\n    key: \"SK\",\r\n    name: \"Sikkim\",\r\n  },\r\n  {\r\n    key: \"TN\",\r\n    name: \"Tamil Nadu\",\r\n  },\r\n  {\r\n    key: \"TS\",\r\n    name: \"Telangana\",\r\n  },\r\n  {\r\n    key: \"TR\",\r\n    name: \"Tripura\",\r\n  },\r\n  {\r\n    key: \"UP\",\r\n    name: \"Uttar Pradesh\",\r\n  },\r\n  {\r\n    key: \"WB\",\r\n    name: \"West Bengal\",\r\n  },\r\n];\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./home.scss\";\r\nimport { Card } from \"../../components/card/card\";\r\nimport { getCovidDataAPI, getTimeSeriesAPI } from \"../../constants/endpoints\";\r\nimport { DropDown } from \"../../components/select/select\";\r\nimport { statesConfig } from \"../../constants/states\";\r\n\r\nconst Home = () => {\r\n  const [cards, setCards] = useState(null);\r\n  const [charts, setCharts] = useState(null);\r\n  const [states, setStates] = useState({\r\n    states: {},\r\n  });\r\n  const [statesLoading, setStatesLoading] = useState(true);\r\n\r\n  const [currentState, setCurrentState] = useState(\"TT\");\r\n\r\n  useEffect(() => {\r\n    fetchStates();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(getCovidDataAPI()).then((covidDataResponse) => {\r\n      const tempdashdata = covidDataResponse.data;\r\n      let tempCards = [\r\n        {\r\n          label: \"Confirmed\",\r\n          value: tempdashdata?.[currentState].total.confirmed,\r\n          delta: tempdashdata?.[currentState].delta.confirmed,\r\n          cardClass: \"cv-alert\",\r\n        },\r\n        {\r\n          label: \"Active\",\r\n          value:\r\n            tempdashdata?.[currentState].total.confirmed -\r\n            (tempdashdata?.[currentState].total.deceased +\r\n              tempdashdata?.[currentState].total.recovered),\r\n          delta: 0,\r\n          cardClass: \"cv-primary\",\r\n        },\r\n        {\r\n          label: \"Recovered\",\r\n          value: tempdashdata?.[currentState].total.recovered,\r\n          delta: tempdashdata?.[currentState].delta.recovered,\r\n          cardClass: \"cv-success\",\r\n        },\r\n        {\r\n          label: \"Deceased\",\r\n          value: tempdashdata?.[currentState].total.deceased,\r\n          delta: tempdashdata?.[currentState].delta.deceased,\r\n          cardClass: \"cv-warning\",\r\n        },\r\n      ];\r\n\r\n      setCards(tempCards);\r\n    });\r\n    axios.get(getTimeSeriesAPI()).then((timeSeriesResponse) => {\r\n      const jsonData = timeSeriesResponse.data;\r\n      let chartData = [];\r\n      Object.keys(jsonData[currentState].dates).forEach((item, index) => {\r\n        if (index % 15 === 0) {\r\n          chartData.push({\r\n            name: item,\r\n            confirm: jsonData[currentState].dates[item].delta7?.confirmed\r\n              ? jsonData[currentState].dates[item].delta7?.confirmed\r\n              : 0,\r\n            active: getActive(\r\n              jsonData[currentState].dates[item].delta7?.confirmed,\r\n              jsonData[currentState].dates[item].delta7?.recovered,\r\n              jsonData[currentState].dates[item].delta7?.deceased\r\n            ),\r\n            recovered: jsonData[currentState].dates[item].delta7?.recovered\r\n              ? jsonData[currentState].dates[item].delta7?.recovered\r\n              : 0,\r\n            deceased: jsonData[currentState].dates[item].delta7?.deceased\r\n              ? jsonData[currentState].dates[item].delta7?.deceased\r\n              : 0,\r\n          });\r\n        }\r\n      });\r\n      let tempCharts = [\r\n        {\r\n          name: \"confirmed\",\r\n          data: chartData.map((x) => {\r\n            return { name: x.name, confirmed: x.confirm };\r\n          }),\r\n          strokeColor: \"#F7685B\",\r\n        },\r\n        {\r\n          name: \"active\",\r\n          data: chartData.map((x) => {\r\n            return { name: x.name, active: x.active };\r\n          }),\r\n          strokeColor: \"#109CF1\",\r\n        },\r\n        {\r\n          name: \"recovered\",\r\n          data: chartData.map((x) => {\r\n            return { name: x.name, recovered: x.recovered };\r\n          }),\r\n          strokeColor: \"#2ED47A\",\r\n        },\r\n        {\r\n          name: \"deceased\",\r\n          data: chartData.map((x) => {\r\n            return { name: x.name, deceased: x.deceased };\r\n          }),\r\n          strokeColor: \"#FFB946\",\r\n        },\r\n      ];\r\n\r\n      setCharts(tempCharts);\r\n    });\r\n  }, [currentState]);\r\n\r\n  function fetchStates() {\r\n      let selectStatesFeed = statesConfig.map((v) => {\r\n        return { value: v.key, label: v.name };\r\n      });\r\n      setStates({ states: selectStatesFeed });\r\n      setStatesLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"cv-home\">\r\n      <DropDown\r\n        placeholder=\"State\"\r\n        data={states.states}\r\n        onStateChange={(e) => {\r\n          setCurrentState(e.value);\r\n        }}\r\n        isLoading={statesLoading}\r\n      ></DropDown>\r\n      <div className=\"cv-row\">\r\n        {cards\r\n          ? cards.map((x, i) => {\r\n              return (\r\n                <Card\r\n                  card={cards ? cards[i] : null}\r\n                  chart={charts ? charts[i] : null}\r\n                  key={i}\r\n                ></Card>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getActive = (confirmed = 0, recovered = 0, deceased = 0) => {\r\n  return confirmed - (recovered + deceased);\r\n};\r\n\r\nexport default Home;\r\n","export const getTimeSeriesAPI = () => {\r\n  return \"https://data.covid19india.org/v4/min/timeseries.min.json\";\r\n};\r\n\r\nexport const getCovidDataAPI =()=> {\r\n    return 'https://data.covid19india.org/v4/min/data.min.json';\r\n}\r\n\r\nexport function GetStatesAPI() {\r\n  return \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\r\n}","import './App.scss';\nimport { Header } from './components/header/header';\nimport Home from './pages/home/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}