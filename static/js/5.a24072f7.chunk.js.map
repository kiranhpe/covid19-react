{"version":3,"sources":["components/table/table.js","components/chart/line/lineChart.js","components/stats-card/stats-card.js","components/select/select.js","constants/states.js","pages/home/home.js","constants/endpoints.js","components/card/card.js","components/chart/pie/pieChart.js"],"names":["Table","theaders","tbody","formatter","className","map","x","i","getValuesFromObject","y","toLocaleString","object","values","Object","keys","forEach","push","CVLineChart","chart","ResponsiveContainer","LineChart","data","Line","dot","type","dataKey","name","stroke","strokeColor","strokeWidth","Tooltip","value","Intl","NumberFormat","format","labelFormatter","StatsCard","card","cardClass","label","delta","DropDown","onStateChange","isLoading","placeholder","React","useState","selectedOption","setSelectedOption","customStyles","option","provided","state","borderBottom","color","isSelected","singleValue","opacity","isDisabled","transition","onChange","selectedItem","options","styles","statesConfig","key","Home","cards","setCards","charts","setCharts","pieCharts","setPieCharts","states","setStates","mainData","setMainData","tableData","setTableData","setTimeSeries","statesLoading","setStatesLoading","currentState","setCurrentState","useEffect","fetchStates","axios","get","then","covidDataResponse","tempdashdata","tempCards","total","confirmed","deceased","recovered","tested","delta7","vaccinated1","vaccinated2","pieChartsData","other","timeSeriesResponse","jsonData","chartData","dates","item","index","confirm","active","getActive","dose_1","dose_2","vaccine","tempCharts","selectStatesFeed","v","interval","setInterval","length","satatesOrDistricts","rawData","meanigfulData","stateName","find","districts","district","districtIndex","districtName","extractDataForTable","clearInterval","e","pieData","Card","props","children","CVPieChart","title","COLORS","height","width","innerRadius","outerRadius","fill","paddingAngle","entry","iconType","fontSize"],"mappings":"kKAAA,mEAIaA,EAAQ,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACvC,OACE,cAAC,IAAD,UACE,qBAAKC,UAAU,WAAf,SACE,kCACE,gCACE,6BACGH,EAASI,KAAI,SAACC,EAAGC,GAChB,OAAO,6BAAaD,GAAJC,UAItB,uCACGL,QADH,IACGA,OADH,EACGA,EAAOG,KAAI,SAACC,EAAGC,GACd,OACE,6BACGC,EAAoBF,GAAGD,KAAI,SAACI,GAC3B,OAAO,6BAAKA,EAAEC,eAAeP,SAFxBI,gBAcnBC,EAAsB,SAACG,GAC3B,IAAIC,EAAS,GAKb,OAJAC,OAAOC,KAAKH,GAAQI,SAAQ,SAACT,GAC3BM,EAAOI,KAAKL,EAAOL,OAGdM,I,6JCpCIK,EAAc,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACzB,OACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAWC,KAAI,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAOG,KAAxB,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,EACLC,KAAK,QACLC,QAAO,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAOQ,KAChBC,OAAM,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAOU,YACfC,YAAa,IAEb,cAACC,EAAA,EAAD,CAAS3B,UAAW,SAAC4B,GAAD,OAAW,IAAIC,KAAKC,aAAa,MAAMC,OAAOH,IAAQI,eAAgB,SAACJ,GAAD,MAAW,YCRxGK,G,OAAY,SAAC,GAAqB,IAAD,IAAlBC,EAAkB,EAAlBA,KAAMnB,EAAY,EAAZA,MAChC,OACE,cAAC,IAAD,UACE,sBAAKd,UAAW,iBAAmBiC,EAAKC,UAAxC,UACE,mBAAGlC,UAAU,WAAb,gBAAyBiC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAME,QAC/B,sBAAKnC,UAAU,qBAAf,UACE,mBAAGA,UAAU,WAAb,gBAAyBiC,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAMN,aAA/B,aAAyB,EAAarB,eAAe,SAChD,OAAJ2B,QAAI,IAAJA,OAAA,EAAAA,EAAMG,OAAQ,GACb,oBAAGpC,UAAU,WAAb,UACE,cAAC,IAAD,CAAWA,UAAU,YADvB,OAEGiC,QAFH,IAEGA,GAFH,UAEGA,EAAMG,aAFT,aAEG,EAAa9B,eAAe,YAIlCQ,GACC,qBAAKd,UAAU,qBAAf,SACE,cAAC,EAAD,CAAac,MAAOA,c,+KCnBnBuB,EAAU,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,cAAcrB,EAA+B,EAA/BA,KAAKsB,EAA0B,EAA1BA,UAAUC,EAAgB,EAAhBA,YACpD,EAA4CC,IAAMC,SAAS,MAA3D,mBAAOC,EAAP,KAAuBC,EAAvB,KAKMC,EAAe,CACnBC,OAAQ,SAACC,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,aAAc,kBACdC,MAAOF,EAAMG,WAAa,MAAQ,UAEpCC,YAAa,SAACL,EAAUC,GACtB,IAAMK,EAAUL,EAAMM,WAAa,GAAM,EAGzC,OAAO,2BAAKP,GAAZ,IAAsBM,UAASE,WAFZ,oBAMvB,OACE,qBAAKvD,UAAU,SAAf,SACE,cAAC,IAAD,CACE2B,MAAOgB,EACPa,SAtBe,SAACC,GACpBb,EAAkBa,GAClBnB,EAAcmB,IAqBVC,QAASzC,EACTuB,YAAa,UAAYA,EACzBD,UAAWA,EAAWoB,OAAQd,OC9BzBe,EAAe,CAC1B,CACEC,IAAK,KACLvC,KAAM,SAER,CACEuC,IAAK,KACLvC,KAAM,+BAER,CACEuC,IAAK,KACLvC,KAAM,kBAER,CACEuC,IAAK,KACLvC,KAAM,qBAER,CACEuC,IAAK,KACLvC,KAAM,SAER,CACEuC,IAAK,KACLvC,KAAM,SAER,CACEuC,IAAK,KACLvC,KAAM,gBAER,CACEuC,IAAI,KACJvC,KAAK,cAEP,CACEuC,IAAK,KACLvC,KAAM,SAER,CACEuC,IAAI,KACJvC,KAAK,iBAEP,CACEuC,IAAK,KACLvC,KAAM,OAER,CACEuC,IAAK,KACLvC,KAAM,WAER,CACEuC,IAAK,KACLvC,KAAM,WAER,CACEuC,IAAK,KACLvC,KAAM,oBAER,CACEuC,IAAK,KACLvC,KAAM,qBAER,CACEuC,IAAK,KACLvC,KAAM,aAER,CACEuC,IAAK,KACLvC,KAAM,aAER,CACEuC,IAAK,KACLvC,KAAM,UAER,CACEuC,IAAI,KACJvC,KAAM,UAER,CACEuC,IAAK,KACLvC,KAAM,eAER,CACEuC,IAAK,KACLvC,KAAM,kBAER,CACEuC,IAAK,KACLvC,KAAM,eAER,CACEuC,IAAK,KACLvC,KAAM,WAER,CACEuC,IAAK,KACLvC,KAAM,aAER,CACEuC,IAAK,KACLvC,KAAM,WAER,CACEuC,IAAK,KACLvC,KAAM,YAER,CACEuC,IAAK,KACLvC,KAAM,UAER,CACEuC,IAAK,KACLvC,KAAM,cAER,CACEuC,IAAK,KACLvC,KAAM,UAER,CACEuC,IAAK,KACLvC,KAAM,aAER,CACEuC,IAAK,KACLvC,KAAM,UAER,CACEuC,IAAK,KACLvC,KAAM,cAER,CACEuC,IAAK,KACLvC,KAAM,aAER,CACEuC,IAAK,KACLvC,KAAM,WAER,CACEuC,IAAK,KACLvC,KAAM,iBAER,CACEuC,IAAK,KACLvC,KAAM,eAER,CACEuC,IAAK,KACLvC,KAAM,gB,0BCwPKwC,UAhYF,WACX,MAA0BpB,mBAAS,MAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KACA,EAA4BtB,mBAAS,MAArC,mBAAOuB,EAAP,KAAeC,EAAf,KACA,EAAkCxB,mBAAS,MAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KACA,EAA4B1B,mBAAS,CACnC2B,OAAQ,KADV,mBAAOA,EAAP,KAAeC,EAAf,KAIA,EAAgC5B,mBAAS,MAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KACA,EAAkC9B,mBAAS,MAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KACA,EAAoChC,mBAAS,MAA7C,mBAAmBiC,GAAnB,WACA,EAA0CjC,oBAAS,GAAnD,mBAAOkC,EAAP,KAAsBC,EAAtB,KAEA,EAAwCnC,mBAAS,MAAjD,mBAAOoC,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WAGNE,IAAMC,IC5BD,sDD4BwBC,MAAK,SAACC,GAAuB,IAAD,uHACjDC,GAAeD,EAAkBpE,KACvCuD,EAAYc,IACZ,IAAIC,GAAY,CACd,CACEpD,MAAO,YACPR,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8BU,aAAhC,aAAE,EAAqCC,UAC5CrD,MAAK,OAAEkD,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8B1C,aAAhC,aAAE,EAAqCqD,UAC5CvD,UAAW,YAEb,CACEC,MAAO,SACPR,OACc,OAAZ2D,SAAY,IAAZA,IAAA,UAAAA,GAAeR,UAAf,mBAA8BU,aAA9B,eAAqCC,aACxB,OAAZH,SAAY,IAAZA,IAAA,UAAAA,GAAeR,UAAf,mBAA8BU,aAA9B,eAAqCE,WAArC,OACCJ,SADD,IACCA,IADD,UACCA,GAAeR,UADhB,iBACC,EAA8BU,aAD/B,aACC,EAAqCG,YACzCvD,MAAO,EACPF,UAAW,cAEb,CACEC,MAAO,YACPR,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8BU,aAAhC,aAAE,EAAqCG,UAC5CvD,MAAK,OAAEkD,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8B1C,aAAhC,aAAE,EAAqCuD,UAC5CzD,UAAW,cAEb,CACEC,MAAO,WACPR,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8BU,aAAhC,aAAE,EAAqCE,SAC5CtD,MAAK,OAAEkD,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8B1C,aAAhC,aAAE,EAAqCsD,SAC5CxD,UAAW,cAEb,CACEC,MAAO,SACPR,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8BU,aAAhC,aAAE,EAAqCI,OAC5CxD,MAAK,OAAEkD,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8Be,cAAhC,aAAE,EAAsCD,OAC7C1D,UAAW,WAEb,CACEC,MAAO,uBACPR,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8BU,aAAhC,aAAE,EAAqCM,YAC5C1D,MAAK,OAAEkD,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8Be,cAAhC,aAAE,EAAsCC,YAC7C5D,UAAW,cAEb,CACEC,MAAO,mBACPR,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8BU,aAAhC,aAAE,EAAqCO,YAC5C3D,MAAK,OAAEkD,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8Be,cAAhC,aAAE,EAAsCE,YAC7C7D,UAAW,cAEb,CACEC,MAAO,aACPR,OACc,OAAZ2D,SAAY,IAAZA,IAAA,UAAAA,GAAeR,UAAf,mBAA8BU,aAA9B,eAAqCO,cAArC,OACAT,SADA,IACAA,IADA,UACAA,GAAeR,UADf,iBACA,EAA8BU,aAD9B,aACA,EAAqCM,aACvC1D,OACc,OAAZkD,SAAY,IAAZA,IAAA,UAAAA,GAAeR,UAAf,mBAA8Be,cAA9B,eAAsCE,cAAtC,OACAT,SADA,IACAA,IADA,UACAA,GAAeR,UADf,iBACA,EAA8Be,cAD9B,aACA,EAAsCE,aACxC7D,UAAW,YAGX8D,GAAgB,GACpBA,GAAcpF,KAAK,CACjB,CACEU,KAAM,YACNK,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8BU,aAAhC,aAAE,EAAqCC,WAE9C,CACEnE,KAAM,SACNK,OACc,OAAZ2D,SAAY,IAAZA,IAAA,UAAAA,GAAeR,UAAf,mBAA8BU,aAA9B,eAAqCC,aACxB,OAAZH,SAAY,IAAZA,IAAA,UAAAA,GAAeR,UAAf,mBAA8BU,aAA9B,eAAqCE,WAArC,OACCJ,SADD,IACCA,IADD,UACCA,GAAeR,UADhB,iBACC,EAA8BU,aAD/B,aACC,EAAqCG,aAE3C,CACErE,KAAM,YACNK,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,iBAAE,EAA8BU,aAAhC,aAAE,EAAqCG,WAE9C,CACErE,KAAM,WACNK,MAAK,OAAE2D,SAAF,IAAEA,IAAF,UAAEA,GAAeR,UAAjB,kBAAE,EAA8BU,aAAhC,cAAE,GAAqCE,UAE9C,CACEpE,KAAM,SACNK,MAAK,OAAE2D,SAAF,IAAEA,IAAF,WAAEA,GAAeR,UAAjB,mBAAE,GAA8BU,aAAhC,cAAE,GAAqCS,SAGhDD,GAAcpF,KAAK,CACjB,CACEU,KAAM,QACNK,MAAK,OAAE2D,SAAF,IAAEA,IAAF,WAAEA,GAAeR,UAAjB,mBAAE,GAA8BU,aAAhC,cAAE,GAAqCM,aAE9C,CACExE,KAAM,QACNK,MAAK,OAAE2D,SAAF,IAAEA,IAAF,WAAEA,GAAeR,UAAjB,mBAAE,GAA8BU,aAAhC,cAAE,GAAqCO,eAGhD3B,EAAa4B,IACbhC,EAASuB,OAEXL,IAAMC,ICnIH,4DDmI2BC,MAAK,SAACc,GAClC,IAAMC,EAAWD,EAAmBjF,KACpC0D,EAAcwB,GACd,IAAIC,EAAY,GAChB3F,OAAOC,KAAKyF,EAASrB,GAAcuB,OAAO1F,SAAQ,SAAC2F,EAAMC,GAChC,IAAD,sCAAlBA,EAAQ,KAAO,GACjBH,EAAUxF,KAAK,CACbU,KAAMgF,EACNE,SAAS,UAAAL,EAASrB,GAAcuB,MAAMC,GAAMT,cAAnC,eAA2CJ,WAA3C,UACLU,EAASrB,GAAcuB,MAAMC,GAAMT,cAD9B,aACL,EAA2CJ,UAC3C,EACJgB,OAAQC,EAAS,UACfP,EAASrB,GAAcuB,MAAMC,GAAMT,cADpB,aACf,EAA2CJ,UAD5B,UAEfU,EAASrB,GAAcuB,MAAMC,GAAMT,cAFpB,aAEf,EAA2CF,UAF5B,UAGfQ,EAASrB,GAAcuB,MAAMC,GAAMT,cAHpB,aAGf,EAA2CH,UAE7CC,WAAW,UAAAQ,EAASrB,GAAcuB,MAAMC,GAAMT,cAAnC,eAA2CF,WAA3C,UACPQ,EAASrB,GAAcuB,MAAMC,GAAMT,cAD5B,aACP,EAA2CF,UAC3C,EACJD,UAAU,UAAAS,EAASrB,GAAcuB,MAAMC,GAAMT,cAAnC,eAA2CH,UAA3C,UACNS,EAASrB,GAAcuB,MAAMC,GAAMT,cAD7B,aACN,EAA2CH,SAC3C,EACJE,QAAQ,UAAAO,EAASrB,GAAcuB,MAAMC,GAAMT,cAAnC,eAA2CD,QAA3C,UACJO,EAASrB,GAAcuB,MAAMC,GAAMT,cAD/B,aACJ,EAA2CD,OAC3C,EACJe,QAAQ,UAAAR,EAASrB,GAAcuB,MAAMC,GAAMT,cAAnC,eAA2CC,aAA3C,UACJK,EAASrB,GAAcuB,MAAMC,GAAMT,cAD/B,aACJ,EAA2CC,YAC3C,EACJc,QAAQ,UAAAT,EAASrB,GAAcuB,MAAMC,GAAMT,cAAnC,eAA2CE,aAA3C,UACJI,EAASrB,GAAcuB,MAAMC,GAAMT,cAD/B,aACJ,EAA2CE,YAC3C,EACJc,SACE,UAAAV,EAASrB,GAAcuB,MAAMC,GAAMT,cAAnC,eAA2CE,cAA3C,UACAI,EAASrB,GAAcuB,MAAMC,GAAMT,cADnC,aACA,EAA2CC,cACvC,UAAAK,EAASrB,GAAcuB,MAAMC,GAAMT,cAAnC,eAA2CE,cAA3C,UACAI,EAASrB,GAAcuB,MAAMC,GAAMT,cADnC,aACA,EAA2CC,aAC3C,OAIZ,IAAIgB,EAAa,CACf,CACExF,KAAM,YACNL,KAAMmF,EAAUnG,KAAI,SAACC,GACnB,MAAO,CAAEoB,KAAMpB,EAAEoB,KAAMmE,UAAWvF,EAAEsG,YAEtChF,YAAa,WAEf,CACEF,KAAM,SACNL,KAAMmF,EAAUnG,KAAI,SAACC,GACnB,MAAO,CAAEoB,KAAMpB,EAAEoB,KAAMmF,OAAQvG,EAAEuG,WAEnCjF,YAAa,WAEf,CACEF,KAAM,YACNL,KAAMmF,EAAUnG,KAAI,SAACC,GACnB,MAAO,CAAEoB,KAAMpB,EAAEoB,KAAMqE,UAAWzF,EAAEyF,cAEtCnE,YAAa,WAEf,CACEF,KAAM,WACNL,KAAMmF,EAAUnG,KAAI,SAACC,GACnB,MAAO,CAAEoB,KAAMpB,EAAEoB,KAAMoE,SAAUxF,EAAEwF,aAErClE,YAAa,WAEf,CACEF,KAAM,SACNL,KAAMmF,EAAUnG,KAAI,SAACC,GACnB,MAAO,CAAEoB,KAAMpB,EAAEoB,KAAMsE,OAAQ1F,EAAE0F,WAEnCpE,YAAa,WAEf,CACEF,KAAM,SACNL,KAAMmF,EAAUnG,KAAI,SAACC,GACnB,MAAO,CAAEoB,KAAMpB,EAAEoB,KAAMqF,OAAQzG,EAAEyG,WAEnCnF,YAAa,WAEf,CACEF,KAAM,SACNL,KAAMmF,EAAUnG,KAAI,SAACC,GACnB,MAAO,CAAEoB,KAAMpB,EAAEoB,KAAMsF,OAAQ1G,EAAE0G,WAEnCpF,YAAa,WAEf,CACEF,KAAM,UACNL,KAAMmF,EAAUnG,KAAI,SAACC,GACnB,MAAO,CAAEoB,KAAMpB,EAAEoB,KAAMuF,QAAS3G,EAAE2G,YAEpCrF,YAAa,YAIjB0C,EAAU4C,QAOb,CAAChC,IAEJ,IAAMG,EAAc,WAClB,IAAI8B,EAAmBnD,EAAa3D,KAAI,SAAC+G,GACvC,MAAO,CAAErF,MAAOqF,EAAEnD,IAAK1B,MAAO6E,EAAE1F,SAElCgD,EAAU,CAAED,OAAQ0C,IACpBlC,GAAiB,IAyDb6B,EAAY,WAAiD,IAAhDjB,EAA+C,uDAAnC,EAAGE,EAAgC,uDAApB,EAAGD,EAAiB,uDAAN,EAC1D,OAAOD,GAAaE,EAAYD,IAclC,OAXAV,qBAAU,WACR,IAAMiC,EAAWC,aAAY,WACvB3C,GAAYF,EAAOA,OAAO8C,OAAS,GACrCzC,EA7DsB,SAAC0C,GAAsC,IAAlBC,EAAiB,uDAAP,GACrDC,EAAgB,GAkDpB,OAjDA7G,OAAOC,KAAK2G,GAAS1G,SAAQ,SAAC2F,EAAMC,GACN,IAAD,wBAmBpB,EAnBc,OAAjBzB,EACFwC,EAAc1G,KAAK,CACjB2G,UAAS,UAAEH,EAAmBI,MAAK,SAACtH,GAAD,OAAOA,EAAEyB,QAAU2E,YAA7C,aAAE,EAAkDnE,MAC7DqE,SAAS,UAAAa,EAAQf,GAAMd,aAAd,eAAqBC,WAArB,UACL4B,EAAQf,GAAMd,aADT,aACL,EAAqBC,UACrB,EACJgB,OAAQC,EAAS,UACfW,EAAQf,GAAMd,aADC,aACf,EAAqBC,UADN,UAEf4B,EAAQf,GAAMd,aAFC,aAEf,EAAqBG,UAFN,UAGf0B,EAAQf,GAAMd,aAHC,aAGf,EAAqBE,UAEvBC,WAAW,UAAA0B,EAAQf,GAAMd,aAAd,eAAqBG,WAArB,UACP0B,EAAQf,GAAMd,aADP,aACP,EAAqBG,UACrB,EACJD,UAAU,UAAA2B,EAAQf,GAAMd,aAAd,eAAqBE,UAArB,UACN2B,EAAQf,GAAMd,aADR,aACN,EAAqBE,SACrB,EACJE,QAAQ,UAAAyB,EAAQf,GAAMd,aAAd,eAAqBI,QAArB,UAA8ByB,EAAQf,GAAMd,aAA5C,aAA8B,EAAqBI,OAAS,IAGlEU,IAASxB,GACXrE,OAAOC,KAAP,UAAY2G,EAAQf,UAApB,aAAY,EAAemB,WAAW9G,SACpC,SAAC+G,EAAUC,GAAmB,IAAD,sBAC3BL,EAAc1G,KAAK,CACjBgH,aAAcF,EACdlB,SAAS,UAAAa,EAAQf,GAAMmB,UAAUC,GAAUlC,aAAlC,eAAyCC,WAAzC,UACL4B,EAAQf,GAAMmB,UAAUC,GAAUlC,aAD7B,aACL,EAAyCC,UACzC,EACJgB,OAAQC,EAAS,UACfW,EAAQf,GAAMmB,UAAUC,GAAUlC,aADnB,aACf,EAAyCC,UAD1B,UAEf4B,EAAQf,GAAMmB,UAAUC,GAAUlC,aAFnB,aAEf,EAAyCG,UAF1B,UAGf0B,EAAQf,GAAMmB,UAAUC,GAAUlC,aAHnB,aAGf,EAAyCE,UAE3CC,WAAW,UAAA0B,EAAQf,GAAMmB,UAAUC,GAAUlC,aAAlC,eAAyCG,WAAzC,UACP0B,EAAQf,GAAMmB,UAAUC,GAAUlC,aAD3B,aACP,EAAyCG,UACzC,EACJD,UAAU,UAAA2B,EAAQf,GAAMmB,UAAUC,GAAUlC,aAAlC,eAAyCE,UAAzC,UACN2B,EAAQf,GAAMmB,UAAUC,GAAUlC,aAD5B,aACN,EAAyCE,SACzC,EACJE,QAAQ,UAAAyB,EAAQf,GAAMmB,UAAUC,GAAUlC,aAAlC,eAAyCI,QAAzC,UACJyB,EAAQf,GAAMmB,UAAUC,GAAUlC,aAD9B,aACJ,EAAyCI,OACzC,UAOT0B,EAUUO,CAAoBxD,EAAOA,OAAQE,MAEjD,KACH,OAAO,WACLuD,cAAcb,MAEf,CAACnC,EAAcP,IAGhB,sBAAKvE,UAAU,oBAAf,UACE,cAAC,EAAD,CACEwC,YAAY,QACZvB,KAAMoD,EAAOA,OACb/B,cAAe,SAACyF,GACdhD,EAAgBgD,EAAEpG,QAEpBY,UAAWqC,IAEb,qBAAK5E,UAAU,SAAf,SACG+D,EACGA,EAAM9D,KAAI,SAACC,EAAGC,GACZ,OAAIA,EAAI,EAEJ,qBAAKH,UAAU,gBAAf,SACE,cAAC,IAAD,CACEiC,KAAM8B,EAAQA,EAAM5D,GAAK,KACzBW,MAAOmD,EAASA,EAAO9D,GAAK,MACvBA,KAKJ,QAGX,OAEN,qBAAKH,UAAU,SAAf,SACG+D,EACGA,EAAM9D,KAAI,SAACC,EAAGC,GACZ,OAAIA,EAAI,EAEJ,qBAAKH,UAAU,gBAAf,SACE,cAAC,IAAD,CACEiC,KAAM8B,EAAQA,EAAM5D,GAAK,KACzBW,MAAOmD,EAASA,EAAO9D,GAAK,MACvBA,KAKJ,QAGX,OAEN,qBAAKH,UAAU,SAAf,SACGmE,GACCA,EAAUlE,KAAI,SAACqG,EAAMC,GACnB,OACE,qBAAKvG,UAAU,yBAAf,SACE,cAAC,IAAD,CAAYgI,QAAS1B,EAAMtG,UAAU,oBAK9CuE,GACC,qBAAKvE,UAAU,iBAAf,SACE,cAAC,IAAD,CACEH,SAAU,CACS,OAAjBiF,EAAwB,QAAU,WAClC,YACA,SACA,YACA,WACA,UAEFhF,MAAO2E,EACP1E,UAAW,c,gCEnYvB,yDAGakI,EAAO,SAACC,GACnB,OACE,qBAAKlI,UAAU,WAAf,SACGkI,EAAMC,a,gCCNb,8FAIaC,EAAa,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,QAASK,EAAY,EAAZA,MAC9BC,EAAS,CAAC,UAAW,UAAW,UAAW,WACjD,OACE,sBAAKtI,UAAU,mBAAf,UACE,4BAAIqI,IACJ,eAAC,IAAD,CAAUE,OAAQ,IAAKC,MAAO,IAA9B,UACE,cAAC,IAAD,CACEvH,KAAM+G,EACNS,YAAa,GACbC,YAAa,GACbC,KAAK,UACLC,aAAc,EACdvH,QAAQ,QANV,SAQG2G,EAAQ/H,KAAI,SAAC4I,EAAOtC,GAAR,OACX,cAAC,IAAD,CAA4BoC,KAAML,EAAO/B,EAAQ+B,EAAOnB,SAAxD,eAAmBZ,SAGvB,cAAC,IAAD,CAAQuC,SAAS,SAASC,SAAU,Y","file":"static/js/5.a24072f7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"../card/card\";\nimport \"./table.scss\";\n\nexport const Table = ({ theaders, tbody, formatter }) => {\n  return (\n    <Card>\n      <div className=\"cv-table\">\n        <table>\n          <thead>\n            <tr>\n              {theaders.map((x, i) => {\n                return <th key={i}>{x}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {tbody?.map((x, i) => {\n              return (\n                <tr key={i}>\n                  {getValuesFromObject(x).map((y) => {\n                    return <td>{y.toLocaleString(formatter)}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n};\n\nconst getValuesFromObject = (object) => {\n  let values = [];\n  Object.keys(object).forEach((x) => {\n    values.push(object[x]);\n  });\n\n  return values;\n};\n","import React from 'react'\nimport { LineChart, Line, ResponsiveContainer, Tooltip } from \"recharts\";\n\nexport const CVLineChart = ({chart}) => {\n    return (\n        <ResponsiveContainer>\n            <LineChart data={chart?.data}>\n              <Line\n                dot={false}\n                type=\"basis\"\n                dataKey={chart?.name}\n                stroke={chart?.strokeColor}\n                strokeWidth={3}\n              />\n                <Tooltip formatter={(value) => new Intl.NumberFormat('en').format(value)} labelFormatter={(value) => ''} />\n            </LineChart>\n          </ResponsiveContainer>\n    )\n}\n","import React from \"react\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { Card } from \"../card/card\";\nimport { CVLineChart } from \"../chart/line/lineChart\";\nimport \"./stats-card.scss\";\n\nexport const StatsCard = ({ card, chart }) => {\n  return (\n    <Card>\n      <div className={\"cv-stats-card \" + card.cardClass}>\n        <p className=\"cv-label\">{card?.label}</p>\n        <div className=\"cv-count-container\">\n          <p className=\"cv-count\">{card?.value?.toLocaleString(\"hi\")}</p>\n          {card?.delta > 0 && (\n            <p className=\"cv-delta\">\n              <FaArrowUp className=\"cv-icon\" />\n              {card?.delta?.toLocaleString(\"hi\")}\n            </p>\n          )}\n        </div>\n        {chart && (\n          <div className=\"cv-chart-container\">\n            <CVLineChart chart={chart}></CVLineChart>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport Select from \"react-select\";\nimport \"./select.scss\";\nexport const DropDown =({onStateChange,data,isLoading,placeholder})=> {\n  const [selectedOption, setSelectedOption] = React.useState('TT');\n  const handleChange = (selectedItem) => {\n    setSelectedOption(selectedItem);\n    onStateChange(selectedItem);\n  };\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted pink',\n      color: state.isSelected ? 'red' : 'blue',\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n  \n      return { ...provided, opacity, transition };\n    }\n  }\n\n  return (\n    <div className=\"select\">\n      <Select\n        value={selectedOption}\n        onChange={handleChange}\n        options={data}\n        placeholder={\"Select \" + placeholder}\n        isLoading={isLoading} styles={customStyles}\n      />\n    </div>\n  );\n}\n","export const statesConfig = [\n  {\n    key: \"TT\",\n    name: \"India\",\n  },\n  {\n    key: \"AN\",\n    name: \"Andaman and Nicobar Islands\",\n  },\n  {\n    key: \"AP\",\n    name: \"Andhra Pradesh\",\n  },\n  {\n    key: \"AR\",\n    name: \"Arunachal Pradesh\",\n  },\n  {\n    key: \"AS\",\n    name: \"Assam\",\n  },\n  {\n    key: \"BR\",\n    name: \"Bihar\",\n  },\n  {\n    key: \"CT\",\n    name: \"Chhattisgarh\",\n  },\n  {\n    key:\"CH\",\n    name:\"Chandigarh\"\n  },\n  {\n    key: \"DL\",\n    name: \"Delhi\",\n  },\n  {\n    key:\"DN\",\n    name:\"Dadra and Diu\"\n  },\n  {\n    key: \"GA\",\n    name: \"Goa\",\n  },\n  {\n    key: \"GJ\",\n    name: \"Gujarat\",\n  },\n  {\n    key: \"HR\",\n    name: \"Haryana\",\n  },\n  {\n    key: \"HP\",\n    name: \"Himachal Pradesh\",\n  },\n  {\n    key: \"JK\",\n    name: \"Jammu and Kashmir\",\n  },\n  {\n    key: \"JH\",\n    name: \"Jharkhand\",\n  },\n  {\n    key: \"KA\",\n    name: \"Karnataka\",\n  },\n  {\n    key: \"KL\",\n    name: \"Kerala\",\n  },\n  {\n    key:\"LA\",\n    name: \"Ladhak\"\n  },\n  {\n    key: \"LD\",\n    name: \"Lakshadweep\",\n  },\n  {\n    key: \"MP\",\n    name: \"Madhya Pradesh\",\n  },\n  {\n    key: \"MH\",\n    name: \"Maharashtra\",\n  },\n  {\n    key: \"MN\",\n    name: \"Manipur\",\n  },\n  {\n    key: \"ML\",\n    name: \"Meghalaya\",\n  },\n  {\n    key: \"MZ\",\n    name: \"Mizoram\",\n  },\n  {\n    key: \"NL\",\n    name: \"Nagaland\",\n  },\n  {\n    key: \"OR\",\n    name: \"Odisha\",\n  },\n  {\n    key: \"PY\",\n    name: \"Puducherry\",\n  },\n  {\n    key: \"PB\",\n    name: \"Punjab\",\n  },\n  {\n    key: \"RJ\",\n    name: \"Rajasthan\",\n  },\n  {\n    key: \"SK\",\n    name: \"Sikkim\",\n  },\n  {\n    key: \"TN\",\n    name: \"Tamil Nadu\",\n  },\n  {\n    key: \"TG\",\n    name: \"Telangana\",\n  },\n  {\n    key: \"TR\",\n    name: \"Tripura\",\n  },\n  {\n    key: \"UP\",\n    name: \"Uttar Pradesh\",\n  },\n  {\n    key: \"UT\",\n    name: \"Uttarakhand\"\n  },\n  {\n    key: \"WB\",\n    name: \"West Bengal\",\n  },\n];\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./home.scss\";\nimport { getCovidDataAPI, getTimeSeriesAPI } from \"../../constants/endpoints\";\nimport { DropDown } from \"../../components/select/select\";\nimport { statesConfig } from \"../../constants/states\";\nimport { Table } from \"../../components/table/table\";\nimport { StatsCard } from \"../../components/stats-card/stats-card\";\nimport { CVPieChart } from \"../../components/chart/pie/pieChart\";\n\nconst Home = () => {\n  const [cards, setCards] = useState(null);\n  const [charts, setCharts] = useState(null);\n  const [pieCharts, setPieCharts] = useState(null);\n  const [states, setStates] = useState({\n    states: [],\n  });\n\n  const [mainData, setMainData] = useState(null);\n  const [tableData, setTableData] = useState(null);\n  const [timeSeries, setTimeSeries] = useState(null);\n  const [statesLoading, setStatesLoading] = useState(true);\n\n  const [currentState, setCurrentState] = useState(\"TT\");\n\n  useEffect(() => {\n    fetchStates();\n  }, []);\n\n  useEffect(() => {\n    \n    const fetchHomePageData =()=> {\n      axios.get(getCovidDataAPI()).then((covidDataResponse) => {\n        const tempdashdata = covidDataResponse.data;\n        setMainData(tempdashdata);\n        let tempCards = [\n          {\n            label: \"Confirmed\",\n            value: tempdashdata?.[currentState]?.total?.confirmed,\n            delta: tempdashdata?.[currentState]?.delta?.confirmed,\n            cardClass: \"cv-alert\",\n          },\n          {\n            label: \"Active\",\n            value:\n              tempdashdata?.[currentState]?.total?.confirmed -\n              (tempdashdata?.[currentState]?.total?.deceased +\n                tempdashdata?.[currentState]?.total?.recovered),\n            delta: 0,\n            cardClass: \"cv-primary\",\n          },\n          {\n            label: \"Recovered\",\n            value: tempdashdata?.[currentState]?.total?.recovered,\n            delta: tempdashdata?.[currentState]?.delta?.recovered,\n            cardClass: \"cv-success\",\n          },\n          {\n            label: \"Deceased\",\n            value: tempdashdata?.[currentState]?.total?.deceased,\n            delta: tempdashdata?.[currentState]?.delta?.deceased,\n            cardClass: \"cv-warning\",\n          },\n          {\n            label: \"Tested\",\n            value: tempdashdata?.[currentState]?.total?.tested,\n            delta: tempdashdata?.[currentState]?.delta7?.tested,\n            cardClass: \"cv-info\",\n          },\n          {\n            label: \"Partially vaccinated\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated1,\n            delta: tempdashdata?.[currentState]?.delta7?.vaccinated1,\n            cardClass: \"cv-success\",\n          },\n          {\n            label: \"Fully vaccinated\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated2,\n            delta: tempdashdata?.[currentState]?.delta7?.vaccinated2,\n            cardClass: \"cv-primary\",\n          },\n          {\n            label: \"Vaccinated\",\n            value:\n              tempdashdata?.[currentState]?.total?.vaccinated2 +\n              tempdashdata?.[currentState]?.total?.vaccinated1,\n            delta:\n              tempdashdata?.[currentState]?.delta7?.vaccinated2 +\n              tempdashdata?.[currentState]?.delta7?.vaccinated2,\n            cardClass: \"cv-info\",\n          },\n        ];\n        let pieChartsData = [];\n        pieChartsData.push([\n          {\n            name: \"Confirmed\",\n            value: tempdashdata?.[currentState]?.total?.confirmed,\n          },\n          {\n            name: \"Active\",\n            value:\n              tempdashdata?.[currentState]?.total?.confirmed -\n              (tempdashdata?.[currentState]?.total?.deceased +\n                tempdashdata?.[currentState]?.total?.recovered),\n          },\n          {\n            name: \"Recovered\",\n            value: tempdashdata?.[currentState]?.total?.recovered,\n          },\n          {\n            name: \"Deceased\",\n            value: tempdashdata?.[currentState]?.total?.deceased,\n          },\n          {\n            name: \"Others\",\n            value: tempdashdata?.[currentState]?.total?.other,\n          },\n        ]);\n        pieChartsData.push([\n          {\n            name: \"Dose1\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated1,\n          },\n          {\n            name: \"Dose2\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated2,\n          },\n        ]);\n        setPieCharts(pieChartsData);\n        setCards(tempCards);\n      });\n      axios.get(getTimeSeriesAPI()).then((timeSeriesResponse) => {\n        const jsonData = timeSeriesResponse.data;\n        setTimeSeries(jsonData);\n        let chartData = [];\n        Object.keys(jsonData[currentState].dates).forEach((item, index) => {\n          if (index % 15 === 0) {\n            chartData.push({\n              name: item,\n              confirm: jsonData[currentState].dates[item].delta7?.confirmed\n                ? jsonData[currentState].dates[item].delta7?.confirmed\n                : 0,\n              active: getActive(\n                jsonData[currentState].dates[item].delta7?.confirmed,\n                jsonData[currentState].dates[item].delta7?.recovered,\n                jsonData[currentState].dates[item].delta7?.deceased\n              ),\n              recovered: jsonData[currentState].dates[item].delta7?.recovered\n                ? jsonData[currentState].dates[item].delta7?.recovered\n                : 0,\n              deceased: jsonData[currentState].dates[item].delta7?.deceased\n                ? jsonData[currentState].dates[item].delta7?.deceased\n                : 0,\n              tested: jsonData[currentState].dates[item].delta7?.tested\n                ? jsonData[currentState].dates[item].delta7?.tested\n                : 0,\n              dose_1: jsonData[currentState].dates[item].delta7?.vaccinated1\n                ? jsonData[currentState].dates[item].delta7?.vaccinated1\n                : 0,\n              dose_2: jsonData[currentState].dates[item].delta7?.vaccinated2\n                ? jsonData[currentState].dates[item].delta7?.vaccinated2\n                : 0,\n              vaccine:\n                jsonData[currentState].dates[item].delta7?.vaccinated2 +\n                jsonData[currentState].dates[item].delta7?.vaccinated1\n                  ? jsonData[currentState].dates[item].delta7?.vaccinated2 +\n                    jsonData[currentState].dates[item].delta7?.vaccinated1\n                  : 0,\n            });\n          }\n        });\n        let tempCharts = [\n          {\n            name: \"confirmed\",\n            data: chartData.map((x) => {\n              return { name: x.name, confirmed: x.confirm };\n            }),\n            strokeColor: \"#F7685B\",\n          },\n          {\n            name: \"active\",\n            data: chartData.map((x) => {\n              return { name: x.name, active: x.active };\n            }),\n            strokeColor: \"#109CF1\",\n          },\n          {\n            name: \"recovered\",\n            data: chartData.map((x) => {\n              return { name: x.name, recovered: x.recovered };\n            }),\n            strokeColor: \"#2ED47A\",\n          },\n          {\n            name: \"deceased\",\n            data: chartData.map((x) => {\n              return { name: x.name, deceased: x.deceased };\n            }),\n            strokeColor: \"#FFB946\",\n          },\n          {\n            name: \"tested\",\n            data: chartData.map((x) => {\n              return { name: x.name, tested: x.tested };\n            }),\n            strokeColor: \"#885AF8\",\n          },\n          {\n            name: \"dose_1\",\n            data: chartData.map((x) => {\n              return { name: x.name, dose_1: x.dose_1 };\n            }),\n            strokeColor: \"#2ED47A\",\n          },\n          {\n            name: \"dose_2\",\n            data: chartData.map((x) => {\n              return { name: x.name, dose_2: x.dose_2 };\n            }),\n            strokeColor: \"#109CF1\",\n          },\n          {\n            name: \"vaccine\",\n            data: chartData.map((x) => {\n              return { name: x.name, vaccine: x.vaccine };\n            }),\n            strokeColor: \"#885AF8\",\n          },\n        ];\n  \n        setCharts(tempCharts);\n      });\n    }\n    \n    fetchHomePageData();\n\n    \n  }, [currentState]);\n\n  const fetchStates = () => {\n    let selectStatesFeed = statesConfig.map((v) => {\n      return { value: v.key, label: v.name };\n    });\n    setStates({ states: selectStatesFeed });\n    setStatesLoading(false);\n  };\n\n  const extractDataForTable = (satatesOrDistricts, rawData = []) => {\n    let meanigfulData = [];\n    Object.keys(rawData).forEach((item, index) => {\n      if (currentState === \"TT\") {\n        meanigfulData.push({\n          stateName: satatesOrDistricts.find((x) => x.value === item)?.label,\n          confirm: rawData[item].total?.confirmed\n            ? rawData[item].total?.confirmed\n            : 0,\n          active: getActive(\n            rawData[item].total?.confirmed,\n            rawData[item].total?.recovered,\n            rawData[item].total?.deceased\n          ),\n          recovered: rawData[item].total?.recovered\n            ? rawData[item].total?.recovered\n            : 0,\n          deceased: rawData[item].total?.deceased\n            ? rawData[item].total?.deceased\n            : 0,\n          tested: rawData[item].total?.tested ? rawData[item].total?.tested : 0,\n        });\n      } else {\n        if (item === currentState)\n          Object.keys(rawData[item]?.districts).forEach(\n            (district, districtIndex) => {\n              meanigfulData.push({\n                districtName: district,\n                confirm: rawData[item].districts[district].total?.confirmed\n                  ? rawData[item].districts[district].total?.confirmed\n                  : 0,\n                active: getActive(\n                  rawData[item].districts[district].total?.confirmed,\n                  rawData[item].districts[district].total?.recovered,\n                  rawData[item].districts[district].total?.deceased\n                ),\n                recovered: rawData[item].districts[district].total?.recovered\n                  ? rawData[item].districts[district].total?.recovered\n                  : 0,\n                deceased: rawData[item].districts[district].total?.deceased\n                  ? rawData[item].districts[district].total?.deceased\n                  : 0,\n                tested: rawData[item].districts[district].total?.tested\n                  ? rawData[item].districts[district].total?.tested\n                  : 0,\n              });\n            }\n          );\n      }\n    });\n\n    return meanigfulData;\n  };\n\n  const getActive = (confirmed = 0, recovered = 0, deceased = 0) => {\n    return confirmed - (recovered + deceased);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (mainData && states.states.length > 0) {\n        setTableData(extractDataForTable(states.states, mainData));\n      }\n    }, 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentState, mainData]);\n\n  return (\n    <div className=\"cv-main-container\">\n      <DropDown\n        placeholder=\"State\"\n        data={states.states}\n        onStateChange={(e) => {\n          setCurrentState(e.value);\n        }}\n        isLoading={statesLoading}\n      ></DropDown>\n      <div className=\"cv-row\">\n        {cards\n          ? cards.map((x, i) => {\n              if (i < 4) {\n                return (\n                  <div className=\"cv-stats-card\">\n                    <StatsCard\n                      card={cards ? cards[i] : null}\n                      chart={charts ? charts[i] : null}\n                      key={i}\n                    ></StatsCard>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </div>\n      <div className=\"cv-row\">\n        {cards\n          ? cards.map((x, i) => {\n              if (i > 3) {\n                return (\n                  <div className=\"cv-stats-card\">\n                    <StatsCard\n                      card={cards ? cards[i] : null}\n                      chart={charts ? charts[i] : null}\n                      key={i}\n                    ></StatsCard>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </div>\n      <div className=\"cv-row\">\n        {pieCharts &&\n          pieCharts.map((item, index) => {\n            return (\n              <div className=\"cv-pie-chart-container\">\n                <CVPieChart pieData={item} className=\"pie-card\"></CVPieChart>\n              </div>\n            );\n          })}\n      </div>\n      {mainData && (\n        <div className=\"cv-stats-table\">\n          <Table\n            theaders={[\n              currentState === \"TT\" ? \"State\" : \"District\",\n              \"Confirmed\",\n              \"Active\",\n              \"Recovered\",\n              \"Deseased\",\n              \"Tested\",\n            ]}\n            tbody={tableData}\n            formatter={\"hi\"}\n          ></Table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","export const getTimeSeriesAPI = () => {\n  return \"https://data.covid19india.org/v4/min/timeseries.min.json\";\n};\n\nexport const getCovidDataAPI =()=> {\n    return 'https://data.covid19india.org/v4/min/data.min.json';\n}\n\nexport function GetStatesAPI() {\n  return \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\n}","import React from \"react\";\nimport \"./card.scss\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"cv-card \">\n      {props.children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\nimport './pieChart.scss';\n\nexport const CVPieChart = ({ pieData, title }) => {\n  const COLORS = [\"#109CF1\", \"#2ED47A\", \"#885AF8\", \"#F7685B\"];\n  return (\n    <div className=\"cv-pie-container\">\n      <b>{title}</b>\n      <PieChart height={250} width={350}>\n        <Pie\n          data={pieData}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n          dataKey=\"value\"\n        >\n          {pieData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Legend iconType=\"circle\" fontSize={4} />\n      </PieChart>\n    </div>\n  );\n};\n"],"sourceRoot":""}