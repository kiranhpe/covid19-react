{"version":3,"sources":["constants/states.js","pages/home/home.js","constants/endpoints.js"],"names":["statesConfig","key","name","Home","useState","cards","setCards","charts","setCharts","pieCharts","setPieCharts","states","setStates","selectedDropdown1","setSelectedDropdown1","mainData","setMainData","tableData","setTableData","setTimeSeries","statesLoading","setStatesLoading","currentState","setCurrentState","useEffect","fetchStates","axios","get","then","covidDataResponse","tempdashdata","data","tempCards","label","value","total","confirmed","delta","cardClass","deceased","recovered","tested","delta7","vaccinated1","vaccinated2","pieChartsData","push","other","timeSeriesResponse","jsonData","chartData","Object","keys","dates","forEach","item","index","confirm","active","getActive","dose_1","dose_2","vaccine","tempCharts","map","x","strokeColor","selectStatesFeed","v","length","satatesOrDistricts","rawData","meanigfulData","stateName","find","districts","district","districtIndex","districtName","extractDataForTable","className","placeholder","onStateChange","e","isLoading","selectedItemDefault","i","card","chart","pieData","theaders","tbody","formatter","onRowClick","window","scroll","top","behavior"],"mappings":"2MAAaA,EAAe,CAC1B,CACEC,IAAK,KACLC,KAAM,SAER,CACED,IAAK,KACLC,KAAM,+BAER,CACED,IAAK,KACLC,KAAM,kBAER,CACED,IAAK,KACLC,KAAM,qBAER,CACED,IAAK,KACLC,KAAM,SAER,CACED,IAAK,KACLC,KAAM,SAER,CACED,IAAK,KACLC,KAAM,gBAER,CACED,IAAI,KACJC,KAAK,cAEP,CACED,IAAK,KACLC,KAAM,SAER,CACED,IAAI,KACJC,KAAK,iBAEP,CACED,IAAK,KACLC,KAAM,OAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,oBAER,CACED,IAAK,KACLC,KAAM,qBAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,UAER,CACED,IAAI,KACJC,KAAM,UAER,CACED,IAAK,KACLC,KAAM,eAER,CACED,IAAK,KACLC,KAAM,kBAER,CACED,IAAK,KACLC,KAAM,eAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,YAER,CACED,IAAK,KACLC,KAAM,UAER,CACED,IAAK,KACLC,KAAM,cAER,CACED,IAAK,KACLC,KAAM,UAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,UAER,CACED,IAAK,KACLC,KAAM,cAER,CACED,IAAK,KACLC,KAAM,aAER,CACED,IAAK,KACLC,KAAM,WAER,CACED,IAAK,KACLC,KAAM,iBAER,CACED,IAAK,KACLC,KAAM,eAER,CACED,IAAK,KACLC,KAAM,gB,2CC8QKC,UArZF,WACX,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA4BN,mBAAS,C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","file":"static/js/6.cca4ca97.chunk.js","sourcesContent":["export const statesConfig = [\n  {\n    key: \"TT\",\n    name: \"India\",\n  },\n  {\n    key: \"AN\",\n    name: \"Andaman and Nicobar Islands\",\n  },\n  {\n    key: \"AP\",\n    name: \"Andhra Pradesh\",\n  },\n  {\n    key: \"AR\",\n    name: \"Arunachal Pradesh\",\n  },\n  {\n    key: \"AS\",\n    name: \"Assam\",\n  },\n  {\n    key: \"BR\",\n    name: \"Bihar\",\n  },\n  {\n    key: \"CT\",\n    name: \"Chhattisgarh\",\n  },\n  {\n    key:\"CH\",\n    name:\"Chandigarh\"\n  },\n  {\n    key: \"DL\",\n    name: \"Delhi\",\n  },\n  {\n    key:\"DN\",\n    name:\"Dadra and Diu\"\n  },\n  {\n    key: \"GA\",\n    name: \"Goa\",\n  },\n  {\n    key: \"GJ\",\n    name: \"Gujarat\",\n  },\n  {\n    key: \"HR\",\n    name: \"Haryana\",\n  },\n  {\n    key: \"HP\",\n    name: \"Himachal Pradesh\",\n  },\n  {\n    key: \"JK\",\n    name: \"Jammu and Kashmir\",\n  },\n  {\n    key: \"JH\",\n    name: \"Jharkhand\",\n  },\n  {\n    key: \"KA\",\n    name: \"Karnataka\",\n  },\n  {\n    key: \"KL\",\n    name: \"Kerala\",\n  },\n  {\n    key:\"LA\",\n    name: \"Ladhak\"\n  },\n  {\n    key: \"LD\",\n    name: \"Lakshadweep\",\n  },\n  {\n    key: \"MP\",\n    name: \"Madhya Pradesh\",\n  },\n  {\n    key: \"MH\",\n    name: \"Maharashtra\",\n  },\n  {\n    key: \"MN\",\n    name: \"Manipur\",\n  },\n  {\n    key: \"ML\",\n    name: \"Meghalaya\",\n  },\n  {\n    key: \"MZ\",\n    name: \"Mizoram\",\n  },\n  {\n    key: \"NL\",\n    name: \"Nagaland\",\n  },\n  {\n    key: \"OR\",\n    name: \"Odisha\",\n  },\n  {\n    key: \"PY\",\n    name: \"Puducherry\",\n  },\n  {\n    key: \"PB\",\n    name: \"Punjab\",\n  },\n  {\n    key: \"RJ\",\n    name: \"Rajasthan\",\n  },\n  {\n    key: \"SK\",\n    name: \"Sikkim\",\n  },\n  {\n    key: \"TN\",\n    name: \"Tamil Nadu\",\n  },\n  {\n    key: \"TG\",\n    name: \"Telangana\",\n  },\n  {\n    key: \"TR\",\n    name: \"Tripura\",\n  },\n  {\n    key: \"UP\",\n    name: \"Uttar Pradesh\",\n  },\n  {\n    key: \"UT\",\n    name: \"Uttarakhand\"\n  },\n  {\n    key: \"WB\",\n    name: \"West Bengal\",\n  },\n];\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./home.scss\";\nimport { getCovidDataAPI, getTimeSeriesAPI } from \"../../constants/endpoints\";\nimport { DropDown } from \"../../components/select/select\";\nimport { statesConfig } from \"../../constants/states\";\nimport { Table } from \"../../components/table/table\";\nimport { StatsCard } from \"../../components/stats-card/stats-card\";\nimport { CVPieChart } from \"../../components/chart/pie/pieChart\";\nimport Maps from \"../../components/maps/map\";\n\nconst Home = () => {\n  const [cards, setCards] = useState(null);\n  const [charts, setCharts] = useState(null);\n  const [pieCharts, setPieCharts] = useState(null);\n  const [states, setStates] = useState({\n    states: [],\n  });\n\n  const [selectedDropdown1, setSelectedDropdown1] = useState(null);\n  const [mainData, setMainData] = useState(null);\n  const [tableData, setTableData] = useState(null);\n  const [timeSeries, setTimeSeries] = useState(null);\n  const [statesLoading, setStatesLoading] = useState(true);\n\n  const [currentState, setCurrentState] = useState(\"TT\");\n\n  useEffect(() => {\n    fetchStates();\n  }, []);\n\n  useEffect(() => {\n    const fetchHomePageData = () => {\n      axios.get(getCovidDataAPI()).then((covidDataResponse) => {\n        const tempdashdata = covidDataResponse.data;\n        setMainData(tempdashdata);\n        let tempCards = [\n          {\n            label: \"Confirmed\",\n            value: tempdashdata?.[currentState]?.total?.confirmed,\n            delta: tempdashdata?.[currentState]?.delta?.confirmed,\n            cardClass: \"cv-alert\",\n          },\n          {\n            label: \"Active\",\n            value:\n              tempdashdata?.[currentState]?.total?.confirmed -\n              (tempdashdata?.[currentState]?.total?.deceased +\n                tempdashdata?.[currentState]?.total?.recovered),\n            delta: 0,\n            cardClass: \"cv-primary\",\n          },\n          {\n            label: \"Recovered\",\n            value: tempdashdata?.[currentState]?.total?.recovered,\n            delta: tempdashdata?.[currentState]?.delta?.recovered,\n            cardClass: \"cv-success\",\n          },\n          {\n            label: \"Deceased\",\n            value: tempdashdata?.[currentState]?.total?.deceased,\n            delta: tempdashdata?.[currentState]?.delta?.deceased,\n            cardClass: \"cv-warning\",\n          },\n          {\n            label: \"Tested\",\n            value: tempdashdata?.[currentState]?.total?.tested,\n            delta: tempdashdata?.[currentState]?.delta7?.tested,\n            cardClass: \"cv-info\",\n          },\n          {\n            label: \"Partially vaccinated\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated1,\n            delta: tempdashdata?.[currentState]?.delta7?.vaccinated1,\n            cardClass: \"cv-success\",\n          },\n          {\n            label: \"Fully vaccinated\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated2,\n            delta: tempdashdata?.[currentState]?.delta7?.vaccinated2,\n            cardClass: \"cv-primary\",\n          },\n          {\n            label: \"Vaccinated\",\n            value:\n              tempdashdata?.[currentState]?.total?.vaccinated2 +\n              tempdashdata?.[currentState]?.total?.vaccinated1,\n            delta:\n              tempdashdata?.[currentState]?.delta7?.vaccinated2 +\n              tempdashdata?.[currentState]?.delta7?.vaccinated2,\n            cardClass: \"cv-info\",\n          },\n        ];\n        let pieChartsData = [];\n        pieChartsData.push([\n          {\n            name: \"Confirmed\",\n            value: tempdashdata?.[currentState]?.total?.confirmed,\n          },\n          {\n            name: \"Active\",\n            value:\n              tempdashdata?.[currentState]?.total?.confirmed -\n              (tempdashdata?.[currentState]?.total?.deceased +\n                tempdashdata?.[currentState]?.total?.recovered),\n          },\n          {\n            name: \"Recovered\",\n            value: tempdashdata?.[currentState]?.total?.recovered,\n          },\n          {\n            name: \"Deceased\",\n            value: tempdashdata?.[currentState]?.total?.deceased,\n          },\n          {\n            name: \"Others\",\n            value: tempdashdata?.[currentState]?.total?.other,\n          },\n        ]);\n        pieChartsData.push([\n          {\n            name: \"Dose1\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated1,\n          },\n          {\n            name: \"Dose2\",\n            value: tempdashdata?.[currentState]?.total?.vaccinated2,\n          },\n        ]);\n        setPieCharts(pieChartsData);\n        setCards(tempCards);\n      });\n      axios.get(getTimeSeriesAPI()).then((timeSeriesResponse) => {\n        const jsonData = timeSeriesResponse.data;\n        setTimeSeries(jsonData);\n        let chartData = [];\n        Object.keys(jsonData[currentState].dates).forEach((item, index) => {\n          if (index % 15 === 0) {\n            chartData.push({\n              name: item,\n              confirm: jsonData[currentState].dates[item].delta7?.confirmed\n                ? jsonData[currentState].dates[item].delta7?.confirmed\n                : 0,\n              active: getActive(\n                jsonData[currentState].dates[item].delta7?.confirmed,\n                jsonData[currentState].dates[item].delta7?.recovered,\n                jsonData[currentState].dates[item].delta7?.deceased\n              ),\n              recovered: jsonData[currentState].dates[item].delta7?.recovered\n                ? jsonData[currentState].dates[item].delta7?.recovered\n                : 0,\n              deceased: jsonData[currentState].dates[item].delta7?.deceased\n                ? jsonData[currentState].dates[item].delta7?.deceased\n                : 0,\n              tested: jsonData[currentState].dates[item].delta7?.tested\n                ? jsonData[currentState].dates[item].delta7?.tested\n                : 0,\n              dose_1: jsonData[currentState].dates[item].delta7?.vaccinated1\n                ? jsonData[currentState].dates[item].delta7?.vaccinated1\n                : 0,\n              dose_2: jsonData[currentState].dates[item].delta7?.vaccinated2\n                ? jsonData[currentState].dates[item].delta7?.vaccinated2\n                : 0,\n              vaccine:\n                jsonData[currentState].dates[item].delta7?.vaccinated2 +\n                jsonData[currentState].dates[item].delta7?.vaccinated1\n                  ? jsonData[currentState].dates[item].delta7?.vaccinated2 +\n                    jsonData[currentState].dates[item].delta7?.vaccinated1\n                  : 0,\n            });\n          }\n        });\n        let tempCharts = [\n          {\n            name: \"confirmed\",\n            data: chartData.map((x) => {\n              return { name: x.name, confirmed: x.confirm };\n            }),\n            strokeColor: \"#F7685B\",\n          },\n          {\n            name: \"active\",\n            data: chartData.map((x) => {\n              return { name: x.name, active: x.active };\n            }),\n            strokeColor: \"#109CF1\",\n          },\n          {\n            name: \"recovered\",\n            data: chartData.map((x) => {\n              return { name: x.name, recovered: x.recovered };\n            }),\n            strokeColor: \"#2ED47A\",\n          },\n          {\n            name: \"deceased\",\n            data: chartData.map((x) => {\n              return { name: x.name, deceased: x.deceased };\n            }),\n            strokeColor: \"#FFB946\",\n          },\n          {\n            name: \"tested\",\n            data: chartData.map((x) => {\n              return { name: x.name, tested: x.tested };\n            }),\n            strokeColor: \"#885AF8\",\n          },\n          {\n            name: \"dose_1\",\n            data: chartData.map((x) => {\n              return { name: x.name, dose_1: x.dose_1 };\n            }),\n            strokeColor: \"#2ED47A\",\n          },\n          {\n            name: \"dose_2\",\n            data: chartData.map((x) => {\n              return { name: x.name, dose_2: x.dose_2 };\n            }),\n            strokeColor: \"#109CF1\",\n          },\n          {\n            name: \"vaccine\",\n            data: chartData.map((x) => {\n              return { name: x.name, vaccine: x.vaccine };\n            }),\n            strokeColor: \"#885AF8\",\n          },\n        ];\n\n        setCharts(tempCharts);\n      });\n    };\n\n    fetchHomePageData();\n  }, [currentState, selectedDropdown1]);\n\n  const fetchStates = () => {\n    let selectStatesFeed = statesConfig.map((v) => {\n      return { value: v.key, label: v.name };\n    });\n    setStates({ states: selectStatesFeed });\n    setStatesLoading(false);\n  };\n\n  const extractDataForTable = (satatesOrDistricts, rawData = []) => {\n    let meanigfulData = [];\n    Object.keys(rawData).forEach((item, index) => {\n      if (currentState === \"TT\") {\n        meanigfulData.push({\n          stateName: satatesOrDistricts.find((x) => x.value === item)?.label,\n          confirm: rawData[item].total?.confirmed\n            ? rawData[item].total?.confirmed\n            : 0,\n          active: getActive(\n            rawData[item].total?.confirmed,\n            rawData[item].total?.recovered,\n            rawData[item].total?.deceased\n          ),\n          recovered: rawData[item].total?.recovered\n            ? rawData[item].total?.recovered\n            : 0,\n          deceased: rawData[item].total?.deceased\n            ? rawData[item].total?.deceased\n            : 0,\n          tested: rawData[item].total?.tested ? rawData[item].total?.tested : 0,\n        });\n      } else {\n        if (item === currentState)\n          Object.keys(rawData[item]?.districts).forEach(\n            (district, districtIndex) => {\n              meanigfulData.push({\n                districtName: district,\n                confirm: rawData[item].districts[district].total?.confirmed\n                  ? rawData[item].districts[district].total?.confirmed\n                  : 0,\n                active: getActive(\n                  rawData[item].districts[district].total?.confirmed,\n                  rawData[item].districts[district].total?.recovered,\n                  rawData[item].districts[district].total?.deceased\n                ),\n                recovered: rawData[item].districts[district].total?.recovered\n                  ? rawData[item].districts[district].total?.recovered\n                  : 0,\n                deceased: rawData[item].districts[district].total?.deceased\n                  ? rawData[item].districts[district].total?.deceased\n                  : 0,\n                tested: rawData[item].districts[district].total?.tested\n                  ? rawData[item].districts[district].total?.tested\n                  : 0,\n              });\n            }\n          );\n      }\n    });\n\n    return meanigfulData;\n  };\n\n  const getActive = (confirmed = 0, recovered = 0, deceased = 0) => {\n    return confirmed - (recovered + deceased);\n  };\n\n  useEffect(() => {\n    if (mainData && states.states.length > 0) {\n      setTableData(extractDataForTable(states.states, mainData));\n    }\n  }, [currentState, mainData, selectedDropdown1]);\n\n  return (\n    <div className=\"cv-main-container\">\n      {selectedDropdown1 === null && (\n        <DropDown\n          placeholder=\"State\"\n          data={states.states}\n          onStateChange={(e) => {\n            setCurrentState(e.value);\n          }}\n          isLoading={statesLoading}\n          selectedItemDefault={selectedDropdown1}\n        ></DropDown>\n      )}\n\n      {selectedDropdown1 !==null && (\n        <DropDown\n          placeholder=\"State\"\n          data={states.states}\n          onStateChange={(e) => {\n            setCurrentState(e.value);\n          }}\n          isLoading={statesLoading}\n          selectedItemDefault={selectedDropdown1}\n        ></DropDown>\n      )}\n\n      <div className=\"cv-row\">\n        {cards\n          ? cards.map((x, i) => {\n              if (i < 4) {\n                return (\n                  <div className=\"cv-stats-card\">\n                    <StatsCard\n                      card={cards ? cards[i] : null}\n                      chart={charts ? charts[i] : null}\n                      key={i}\n                    ></StatsCard>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </div>\n      <div className=\"cv-row\">\n        {cards\n          ? cards.map((x, i) => {\n              if (i > 3) {\n                return (\n                  <div className=\"cv-stats-card\">\n                    <StatsCard\n                      card={cards ? cards[i] : null}\n                      chart={charts ? charts[i] : null}\n                      key={i}\n                    ></StatsCard>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </div>\n      <div className=\"cv-row\">\n        {pieCharts &&\n          pieCharts.map((item, index) => {\n            return (\n              <div className=\"cv-pie-chart-container\">\n                <CVPieChart pieData={item} className=\"pie-card\"></CVPieChart>\n              </div>\n            );\n          })}\n      </div>\n      {mainData && (\n        <div className=\"cv-stats-table\">\n          <Table\n            theaders={[\n              currentState === \"TT\" ? \"State\" : \"District\",\n              \"Confirmed\",\n              \"Active\",\n              \"Recovered\",\n              \"Deseased\",\n              \"Tested\",\n            ]}\n            tbody={tableData}\n            formatter={\"hi\"}\n            onRowClick={(e) => {\n              window.scroll({\n                top: 0,\n                behavior: \"smooth\",\n              });\n              if (e.stateName) {\n                setCurrentState(\n                  states.states.find((x) => x.label === e.stateName).value\n                );\n                setSelectedDropdown1(states.states.find((x) => x.label === e.stateName));\n              }\n            }}\n          ></Table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","export const getTimeSeriesAPI = () => {\n  return \"https://data.covid19india.org/v4/min/timeseries.min.json\";\n};\n\nexport const getCovidDataAPI =()=> {\n    return 'https://data.covid19india.org/v4/min/data.min.json';\n}\n\nexport function GetStatesAPI() {\n  return \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\n}"],"sourceRoot":""}